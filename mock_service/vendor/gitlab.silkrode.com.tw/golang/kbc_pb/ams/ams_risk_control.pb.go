// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: ams/ams_risk_control.proto

package ams

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetChannelRiskControlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChannelRiskControlReq) Reset() {
	*x = GetChannelRiskControlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelRiskControlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelRiskControlReq) ProtoMessage() {}

func (x *GetChannelRiskControlReq) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelRiskControlReq.ProtoReflect.Descriptor instead.
func (*GetChannelRiskControlReq) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{0}
}

type GetChannelRiskControlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnableIncreaseRateLimit bool                  `protobuf:"varint,1,opt,name=IsEnableIncreaseRateLimit,proto3" json:"IsEnableIncreaseRateLimit,omitempty"` // 是否啟用同比增幅預警標準
	DefaultIncreaseRateLimit  float64               `protobuf:"fixed64,2,opt,name=DefaultIncreaseRateLimit,proto3" json:"DefaultIncreaseRateLimit,omitempty"`  // 同比增幅預警標準。 渠道當日出款量(交易成功的實際打款金額) 較昨日同期增加達到 X % 時進行 potato bot 預警
	ChannelRiskControls       []*ChannelRiskControl `protobuf:"bytes,3,rep,name=ChannelRiskControls,proto3" json:"ChannelRiskControls,omitempty"`
}

func (x *GetChannelRiskControlResp) Reset() {
	*x = GetChannelRiskControlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelRiskControlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelRiskControlResp) ProtoMessage() {}

func (x *GetChannelRiskControlResp) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelRiskControlResp.ProtoReflect.Descriptor instead.
func (*GetChannelRiskControlResp) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{1}
}

func (x *GetChannelRiskControlResp) GetIsEnableIncreaseRateLimit() bool {
	if x != nil {
		return x.IsEnableIncreaseRateLimit
	}
	return false
}

func (x *GetChannelRiskControlResp) GetDefaultIncreaseRateLimit() float64 {
	if x != nil {
		return x.DefaultIncreaseRateLimit
	}
	return 0
}

func (x *GetChannelRiskControlResp) GetChannelRiskControls() []*ChannelRiskControl {
	if x != nil {
		return x.ChannelRiskControls
	}
	return nil
}

type ChannelRiskControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUseDefaultIncreaseRateLimit bool    `protobuf:"varint,1,opt,name=IsUseDefaultIncreaseRateLimit,proto3" json:"IsUseDefaultIncreaseRateLimit,omitempty"` // 是否使用系統預設:同比增幅預警標準
	IncreaseRateLimit             float64 `protobuf:"fixed64,2,opt,name=IncreaseRateLimit,proto3" json:"IncreaseRateLimit,omitempty"`                        // 同比增幅預警標準。 商戶當日出款量(交易成功的實際打款金額) 較昨日同期增加達到 X % 時進行 potato bot 預警
	Code                          string  `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Name                          string  `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	ID                            uint64  `protobuf:"varint,5,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ChannelRiskControl) Reset() {
	*x = ChannelRiskControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelRiskControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelRiskControl) ProtoMessage() {}

func (x *ChannelRiskControl) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelRiskControl.ProtoReflect.Descriptor instead.
func (*ChannelRiskControl) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelRiskControl) GetIsUseDefaultIncreaseRateLimit() bool {
	if x != nil {
		return x.IsUseDefaultIncreaseRateLimit
	}
	return false
}

func (x *ChannelRiskControl) GetIncreaseRateLimit() float64 {
	if x != nil {
		return x.IncreaseRateLimit
	}
	return 0
}

func (x *ChannelRiskControl) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ChannelRiskControl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelRiskControl) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetMerchantRiskControlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMerchantRiskControlReq) Reset() {
	*x = GetMerchantRiskControlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantRiskControlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantRiskControlReq) ProtoMessage() {}

func (x *GetMerchantRiskControlReq) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantRiskControlReq.ProtoReflect.Descriptor instead.
func (*GetMerchantRiskControlReq) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{3}
}

type GetMerchantRiskControlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnableIncreaseRateLimit bool                   `protobuf:"varint,1,opt,name=IsEnableIncreaseRateLimit,proto3" json:"IsEnableIncreaseRateLimit,omitempty"` // 是否啟用同比增幅預警標準
	DefaultIncreaseRateLimit  float64                `protobuf:"fixed64,2,opt,name=DefaultIncreaseRateLimit,proto3" json:"DefaultIncreaseRateLimit,omitempty"`  // 同比增幅預警標準。 商戶當日出款量(交易成功的實際打款金額) 較昨日同期增加達到 X % 時進行 potato bot 預警
	MerchantRiskControls      []*MerchantRiskControl `protobuf:"bytes,3,rep,name=MerchantRiskControls,proto3" json:"MerchantRiskControls,omitempty"`
}

func (x *GetMerchantRiskControlResp) Reset() {
	*x = GetMerchantRiskControlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantRiskControlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantRiskControlResp) ProtoMessage() {}

func (x *GetMerchantRiskControlResp) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantRiskControlResp.ProtoReflect.Descriptor instead.
func (*GetMerchantRiskControlResp) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{4}
}

func (x *GetMerchantRiskControlResp) GetIsEnableIncreaseRateLimit() bool {
	if x != nil {
		return x.IsEnableIncreaseRateLimit
	}
	return false
}

func (x *GetMerchantRiskControlResp) GetDefaultIncreaseRateLimit() float64 {
	if x != nil {
		return x.DefaultIncreaseRateLimit
	}
	return 0
}

func (x *GetMerchantRiskControlResp) GetMerchantRiskControls() []*MerchantRiskControl {
	if x != nil {
		return x.MerchantRiskControls
	}
	return nil
}

type MerchantRiskControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUseDefaultIncreaseRateLimit bool    `protobuf:"varint,1,opt,name=IsUseDefaultIncreaseRateLimit,proto3" json:"IsUseDefaultIncreaseRateLimit,omitempty"` // 是否使用系統預設:同比增幅預警標準
	IncreaseRateLimit             float64 `protobuf:"fixed64,2,opt,name=IncreaseRateLimit,proto3" json:"IncreaseRateLimit,omitempty"`                        // 同比增幅預警標準。 商戶當日出款量(交易成功的實際打款金額) 較昨日同期增加達到 X % 時進行 potato bot 預警
	ID                            int64   `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *MerchantRiskControl) Reset() {
	*x = MerchantRiskControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantRiskControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantRiskControl) ProtoMessage() {}

func (x *MerchantRiskControl) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantRiskControl.ProtoReflect.Descriptor instead.
func (*MerchantRiskControl) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{5}
}

func (x *MerchantRiskControl) GetIsUseDefaultIncreaseRateLimit() bool {
	if x != nil {
		return x.IsUseDefaultIncreaseRateLimit
	}
	return false
}

func (x *MerchantRiskControl) GetIncreaseRateLimit() float64 {
	if x != nil {
		return x.IncreaseRateLimit
	}
	return 0
}

func (x *MerchantRiskControl) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetWithoutCallbackLimitRiskControlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWithoutCallbackLimitRiskControlReq) Reset() {
	*x = GetWithoutCallbackLimitRiskControlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithoutCallbackLimitRiskControlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithoutCallbackLimitRiskControlReq) ProtoMessage() {}

func (x *GetWithoutCallbackLimitRiskControlReq) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithoutCallbackLimitRiskControlReq.ProtoReflect.Descriptor instead.
func (*GetWithoutCallbackLimitRiskControlReq) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{6}
}

type GetWithoutCallbackLimitRiskControlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnableChannelWithoutCallbackLimit bool                   `protobuf:"varint,1,opt,name=IsEnableChannelWithoutCallbackLimit,proto3" json:"IsEnableChannelWithoutCallbackLimit,omitempty"` //  是否啟用未回調預警標準
	DefaultTimeRange                    string                 `protobuf:"bytes,2,opt,name=DefaultTimeRange,proto3" json:"DefaultTimeRange,omitempty"`                                        // 時間區間：HH:MM:SS。
	DefaultCount                        int64                  `protobuf:"varint,3,opt,name=DefaultCount,proto3" json:"DefaultCount,omitempty"`                                               // 未回調訂單數上限
	CallbackRiskControls                []*CallbackRiskControl `protobuf:"bytes,4,rep,name=CallbackRiskControls,proto3" json:"CallbackRiskControls,omitempty"`
}

func (x *GetWithoutCallbackLimitRiskControlResp) Reset() {
	*x = GetWithoutCallbackLimitRiskControlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithoutCallbackLimitRiskControlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithoutCallbackLimitRiskControlResp) ProtoMessage() {}

func (x *GetWithoutCallbackLimitRiskControlResp) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithoutCallbackLimitRiskControlResp.ProtoReflect.Descriptor instead.
func (*GetWithoutCallbackLimitRiskControlResp) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{7}
}

func (x *GetWithoutCallbackLimitRiskControlResp) GetIsEnableChannelWithoutCallbackLimit() bool {
	if x != nil {
		return x.IsEnableChannelWithoutCallbackLimit
	}
	return false
}

func (x *GetWithoutCallbackLimitRiskControlResp) GetDefaultTimeRange() string {
	if x != nil {
		return x.DefaultTimeRange
	}
	return ""
}

func (x *GetWithoutCallbackLimitRiskControlResp) GetDefaultCount() int64 {
	if x != nil {
		return x.DefaultCount
	}
	return 0
}

func (x *GetWithoutCallbackLimitRiskControlResp) GetCallbackRiskControls() []*CallbackRiskControl {
	if x != nil {
		return x.CallbackRiskControls
	}
	return nil
}

type CallbackRiskControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUseDefaultWithoutCallbackLimit bool   `protobuf:"varint,1,opt,name=IsUseDefaultWithoutCallbackLimit,proto3" json:"IsUseDefaultWithoutCallbackLimit,omitempty"` // 是否使用系統預設:未回調預警標準
	TimeRange                        string `protobuf:"bytes,2,opt,name=TimeRange,proto3" json:"TimeRange,omitempty"`                                                // 時間區間：HH:MM:SS。
	Count                            int64  `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`                                                       // 未回調訂單數上限
	Code                             string `protobuf:"bytes,4,opt,name=Code,proto3" json:"Code,omitempty"`
	Name                             string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	ID                               uint64 `protobuf:"varint,6,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *CallbackRiskControl) Reset() {
	*x = CallbackRiskControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackRiskControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackRiskControl) ProtoMessage() {}

func (x *CallbackRiskControl) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackRiskControl.ProtoReflect.Descriptor instead.
func (*CallbackRiskControl) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{8}
}

func (x *CallbackRiskControl) GetIsUseDefaultWithoutCallbackLimit() bool {
	if x != nil {
		return x.IsUseDefaultWithoutCallbackLimit
	}
	return false
}

func (x *CallbackRiskControl) GetTimeRange() string {
	if x != nil {
		return x.TimeRange
	}
	return ""
}

func (x *CallbackRiskControl) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CallbackRiskControl) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CallbackRiskControl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallbackRiskControl) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetMerchantIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMerchantIDsReq) Reset() {
	*x = GetMerchantIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantIDsReq) ProtoMessage() {}

func (x *GetMerchantIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantIDsReq.ProtoReflect.Descriptor instead.
func (*GetMerchantIDsReq) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{9}
}

type GetMerchantIDsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantIDs []uint64 `protobuf:"varint,1,rep,packed,name=MerchantIDs,proto3" json:"MerchantIDs,omitempty"`
}

func (x *GetMerchantIDsResp) Reset() {
	*x = GetMerchantIDsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ams_ams_risk_control_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantIDsResp) ProtoMessage() {}

func (x *GetMerchantIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_ams_ams_risk_control_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantIDsResp.ProtoReflect.Descriptor instead.
func (*GetMerchantIDsResp) Descriptor() ([]byte, []int) {
	return file_ams_ams_risk_control_proto_rawDescGZIP(), []int{10}
}

func (x *GetMerchantIDsResp) GetMerchantIDs() []uint64 {
	if x != nil {
		return x.MerchantIDs
	}
	return nil
}

var File_ams_ams_risk_control_proto protoreflect.FileDescriptor

var file_ams_ams_risk_control_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x6d, 0x73, 0x2f, 0x61, 0x6d, 0x73, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x6d,
	0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x22, 0xe0, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x69, 0x73, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x19, 0x49,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x13, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x22, 0xc0, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x69, 0x73, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x1d, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x49, 0x73, 0x55, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x22, 0xe4, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3c, 0x0a, 0x19, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a,
	0x18, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x18, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x4c, 0x0a, 0x14, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x44, 0x0a, 0x1d, 0x49, 0x73, 0x55, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x49, 0x73, 0x55, 0x73, 0x65, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x69,
	0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x98, 0x02, 0x0a,
	0x26, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x23, 0x49, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x14, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x14, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x73, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x4a, 0x0a, 0x20, 0x49, 0x73, 0x55, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x22, 0x36, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x73, 0x32, 0x91, 0x03, 0x0a, 0x12, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1d, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x1e, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x7f, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x69, 0x73,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2a, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x44, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x73, 0x69, 0x6c, 0x6b, 0x72, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x77, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6b, 0x62, 0x63, 0x5f, 0x70, 0x62,
	0x2f, 0x61, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ams_ams_risk_control_proto_rawDescOnce sync.Once
	file_ams_ams_risk_control_proto_rawDescData = file_ams_ams_risk_control_proto_rawDesc
)

func file_ams_ams_risk_control_proto_rawDescGZIP() []byte {
	file_ams_ams_risk_control_proto_rawDescOnce.Do(func() {
		file_ams_ams_risk_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_ams_ams_risk_control_proto_rawDescData)
	})
	return file_ams_ams_risk_control_proto_rawDescData
}

var file_ams_ams_risk_control_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_ams_ams_risk_control_proto_goTypes = []interface{}{
	(*GetChannelRiskControlReq)(nil),               // 0: ams.GetChannelRiskControlReq
	(*GetChannelRiskControlResp)(nil),              // 1: ams.GetChannelRiskControlResp
	(*ChannelRiskControl)(nil),                     // 2: ams.ChannelRiskControl
	(*GetMerchantRiskControlReq)(nil),              // 3: ams.GetMerchantRiskControlReq
	(*GetMerchantRiskControlResp)(nil),             // 4: ams.GetMerchantRiskControlResp
	(*MerchantRiskControl)(nil),                    // 5: ams.MerchantRiskControl
	(*GetWithoutCallbackLimitRiskControlReq)(nil),  // 6: ams.GetWithoutCallbackLimitRiskControlReq
	(*GetWithoutCallbackLimitRiskControlResp)(nil), // 7: ams.GetWithoutCallbackLimitRiskControlResp
	(*CallbackRiskControl)(nil),                    // 8: ams.CallbackRiskControl
	(*GetMerchantIDsReq)(nil),                      // 9: ams.GetMerchantIDsReq
	(*GetMerchantIDsResp)(nil),                     // 10: ams.GetMerchantIDsResp
}
var file_ams_ams_risk_control_proto_depIdxs = []int32{
	2,  // 0: ams.GetChannelRiskControlResp.ChannelRiskControls:type_name -> ams.ChannelRiskControl
	5,  // 1: ams.GetMerchantRiskControlResp.MerchantRiskControls:type_name -> ams.MerchantRiskControl
	8,  // 2: ams.GetWithoutCallbackLimitRiskControlResp.CallbackRiskControls:type_name -> ams.CallbackRiskControl
	0,  // 3: ams.RiskControlService.GetChannelRiskControl:input_type -> ams.GetChannelRiskControlReq
	3,  // 4: ams.RiskControlService.GetMerchantRiskControl:input_type -> ams.GetMerchantRiskControlReq
	6,  // 5: ams.RiskControlService.GetWithoutCallbackLimitRiskControl:input_type -> ams.GetWithoutCallbackLimitRiskControlReq
	9,  // 6: ams.RiskControlService.GetMerchantIDs:input_type -> ams.GetMerchantIDsReq
	1,  // 7: ams.RiskControlService.GetChannelRiskControl:output_type -> ams.GetChannelRiskControlResp
	4,  // 8: ams.RiskControlService.GetMerchantRiskControl:output_type -> ams.GetMerchantRiskControlResp
	7,  // 9: ams.RiskControlService.GetWithoutCallbackLimitRiskControl:output_type -> ams.GetWithoutCallbackLimitRiskControlResp
	10, // 10: ams.RiskControlService.GetMerchantIDs:output_type -> ams.GetMerchantIDsResp
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_ams_ams_risk_control_proto_init() }
func file_ams_ams_risk_control_proto_init() {
	if File_ams_ams_risk_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ams_ams_risk_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelRiskControlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelRiskControlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelRiskControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantRiskControlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantRiskControlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantRiskControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithoutCallbackLimitRiskControlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithoutCallbackLimitRiskControlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackRiskControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ams_ams_risk_control_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantIDsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ams_ams_risk_control_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ams_ams_risk_control_proto_goTypes,
		DependencyIndexes: file_ams_ams_risk_control_proto_depIdxs,
		MessageInfos:      file_ams_ams_risk_control_proto_msgTypes,
	}.Build()
	File_ams_ams_risk_control_proto = out.File
	file_ams_ams_risk_control_proto_rawDesc = nil
	file_ams_ams_risk_control_proto_goTypes = nil
	file_ams_ams_risk_control_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RiskControlServiceClient is the client API for RiskControlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RiskControlServiceClient interface {
	GetChannelRiskControl(ctx context.Context, in *GetChannelRiskControlReq, opts ...grpc.CallOption) (*GetChannelRiskControlResp, error)
	GetMerchantRiskControl(ctx context.Context, in *GetMerchantRiskControlReq, opts ...grpc.CallOption) (*GetMerchantRiskControlResp, error)
	GetWithoutCallbackLimitRiskControl(ctx context.Context, in *GetWithoutCallbackLimitRiskControlReq, opts ...grpc.CallOption) (*GetWithoutCallbackLimitRiskControlResp, error)
	// 查詢商戶ID列表
	GetMerchantIDs(ctx context.Context, in *GetMerchantIDsReq, opts ...grpc.CallOption) (*GetMerchantIDsResp, error)
}

type riskControlServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRiskControlServiceClient(cc grpc.ClientConnInterface) RiskControlServiceClient {
	return &riskControlServiceClient{cc}
}

func (c *riskControlServiceClient) GetChannelRiskControl(ctx context.Context, in *GetChannelRiskControlReq, opts ...grpc.CallOption) (*GetChannelRiskControlResp, error) {
	out := new(GetChannelRiskControlResp)
	err := c.cc.Invoke(ctx, "/ams.RiskControlService/GetChannelRiskControl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *riskControlServiceClient) GetMerchantRiskControl(ctx context.Context, in *GetMerchantRiskControlReq, opts ...grpc.CallOption) (*GetMerchantRiskControlResp, error) {
	out := new(GetMerchantRiskControlResp)
	err := c.cc.Invoke(ctx, "/ams.RiskControlService/GetMerchantRiskControl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *riskControlServiceClient) GetWithoutCallbackLimitRiskControl(ctx context.Context, in *GetWithoutCallbackLimitRiskControlReq, opts ...grpc.CallOption) (*GetWithoutCallbackLimitRiskControlResp, error) {
	out := new(GetWithoutCallbackLimitRiskControlResp)
	err := c.cc.Invoke(ctx, "/ams.RiskControlService/GetWithoutCallbackLimitRiskControl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *riskControlServiceClient) GetMerchantIDs(ctx context.Context, in *GetMerchantIDsReq, opts ...grpc.CallOption) (*GetMerchantIDsResp, error) {
	out := new(GetMerchantIDsResp)
	err := c.cc.Invoke(ctx, "/ams.RiskControlService/GetMerchantIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RiskControlServiceServer is the server API for RiskControlService service.
type RiskControlServiceServer interface {
	GetChannelRiskControl(context.Context, *GetChannelRiskControlReq) (*GetChannelRiskControlResp, error)
	GetMerchantRiskControl(context.Context, *GetMerchantRiskControlReq) (*GetMerchantRiskControlResp, error)
	GetWithoutCallbackLimitRiskControl(context.Context, *GetWithoutCallbackLimitRiskControlReq) (*GetWithoutCallbackLimitRiskControlResp, error)
	// 查詢商戶ID列表
	GetMerchantIDs(context.Context, *GetMerchantIDsReq) (*GetMerchantIDsResp, error)
}

// UnimplementedRiskControlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRiskControlServiceServer struct {
}

func (*UnimplementedRiskControlServiceServer) GetChannelRiskControl(context.Context, *GetChannelRiskControlReq) (*GetChannelRiskControlResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelRiskControl not implemented")
}
func (*UnimplementedRiskControlServiceServer) GetMerchantRiskControl(context.Context, *GetMerchantRiskControlReq) (*GetMerchantRiskControlResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerchantRiskControl not implemented")
}
func (*UnimplementedRiskControlServiceServer) GetWithoutCallbackLimitRiskControl(context.Context, *GetWithoutCallbackLimitRiskControlReq) (*GetWithoutCallbackLimitRiskControlResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWithoutCallbackLimitRiskControl not implemented")
}
func (*UnimplementedRiskControlServiceServer) GetMerchantIDs(context.Context, *GetMerchantIDsReq) (*GetMerchantIDsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerchantIDs not implemented")
}

func RegisterRiskControlServiceServer(s *grpc.Server, srv RiskControlServiceServer) {
	s.RegisterService(&_RiskControlService_serviceDesc, srv)
}

func _RiskControlService_GetChannelRiskControl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelRiskControlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RiskControlServiceServer).GetChannelRiskControl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ams.RiskControlService/GetChannelRiskControl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RiskControlServiceServer).GetChannelRiskControl(ctx, req.(*GetChannelRiskControlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RiskControlService_GetMerchantRiskControl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerchantRiskControlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RiskControlServiceServer).GetMerchantRiskControl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ams.RiskControlService/GetMerchantRiskControl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RiskControlServiceServer).GetMerchantRiskControl(ctx, req.(*GetMerchantRiskControlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RiskControlService_GetWithoutCallbackLimitRiskControl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWithoutCallbackLimitRiskControlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RiskControlServiceServer).GetWithoutCallbackLimitRiskControl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ams.RiskControlService/GetWithoutCallbackLimitRiskControl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RiskControlServiceServer).GetWithoutCallbackLimitRiskControl(ctx, req.(*GetWithoutCallbackLimitRiskControlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RiskControlService_GetMerchantIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerchantIDsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RiskControlServiceServer).GetMerchantIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ams.RiskControlService/GetMerchantIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RiskControlServiceServer).GetMerchantIDs(ctx, req.(*GetMerchantIDsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RiskControlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ams.RiskControlService",
	HandlerType: (*RiskControlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChannelRiskControl",
			Handler:    _RiskControlService_GetChannelRiskControl_Handler,
		},
		{
			MethodName: "GetMerchantRiskControl",
			Handler:    _RiskControlService_GetMerchantRiskControl_Handler,
		},
		{
			MethodName: "GetWithoutCallbackLimitRiskControl",
			Handler:    _RiskControlService_GetWithoutCallbackLimitRiskControl_Handler,
		},
		{
			MethodName: "GetMerchantIDs",
			Handler:    _RiskControlService_GetMerchantIDs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ams/ams_risk_control.proto",
}
