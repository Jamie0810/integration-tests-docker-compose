// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v4.0.0
// source: order/orderCreate.proto

package order

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PaymentType int32

const (
	PaymentType_PAYMENT_UNKNOW PaymentType = 0
	PaymentType_ALIPAY         PaymentType = 1
	PaymentType_WECHAT         PaymentType = 2
	PaymentType_BANKCARD       PaymentType = 3
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0: "PAYMENT_UNKNOW",
		1: "ALIPAY",
		2: "WECHAT",
		3: "BANKCARD",
	}
	PaymentType_value = map[string]int32{
		"PAYMENT_UNKNOW": 0,
		"ALIPAY":         1,
		"WECHAT":         2,
		"BANKCARD":       3,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_orderCreate_proto_enumTypes[0].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_order_orderCreate_proto_enumTypes[0]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{0}
}

type TransactionType int32

const (
	TransactionType_TRANSACTION_UNKNOW TransactionType = 0
	TransactionType_DEPOSIT            TransactionType = 1
	TransactionType_WITHDRAW           TransactionType = 2
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "TRANSACTION_UNKNOW",
		1: "DEPOSIT",
		2: "WITHDRAW",
	}
	TransactionType_value = map[string]int32{
		"TRANSACTION_UNKNOW": 0,
		"DEPOSIT":            1,
		"WITHDRAW":           2,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_order_orderCreate_proto_enumTypes[1].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_order_orderCreate_proto_enumTypes[1]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{1}
}

type UserBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID   string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	DeviceIP   string `protobuf:"bytes,2,opt,name=DeviceIP,proto3" json:"DeviceIP,omitempty"`
	DeviceType string `protobuf:"bytes,3,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"`
	Telephone  string `protobuf:"bytes,4,opt,name=Telephone,proto3" json:"Telephone,omitempty"`
	PlayerID   string `protobuf:"bytes,5,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UserBaseInfo) Reset() {
	*x = UserBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBaseInfo) ProtoMessage() {}

func (x *UserBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBaseInfo.ProtoReflect.Descriptor instead.
func (*UserBaseInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{0}
}

func (x *UserBaseInfo) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *UserBaseInfo) GetDeviceIP() string {
	if x != nil {
		return x.DeviceIP
	}
	return ""
}

func (x *UserBaseInfo) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *UserBaseInfo) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *UserBaseInfo) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *UserBaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// kbc內商戶相關資訊
type KbcMerchantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商戶編號
	MerchantID uint64 `protobuf:"varint,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	// 商戶名稱
	MerchantName string `protobuf:"bytes,2,opt,name=MerchantName,proto3" json:"MerchantName,omitempty"`
	// 商戶項目編號
	MerchantProjectID uint64 `protobuf:"varint,3,opt,name=MerchantProjectID,proto3" json:"MerchantProjectID,omitempty"`
	// 商戶項目名稱
	MerchantProjectName string `protobuf:"bytes,4,opt,name=MerchantProjectName,proto3" json:"MerchantProjectName,omitempty"`
	// 商戶產品編號
	MerchantProductID uint64 `protobuf:"varint,5,opt,name=MerchantProductID,proto3" json:"MerchantProductID,omitempty"`
	// 商戶產品名稱
	MerchantProductName string `protobuf:"bytes,6,opt,name=MerchantProductName,proto3" json:"MerchantProductName,omitempty"`
	// 商戶產品API ID
	MerchantProductAPIID uint64 `protobuf:"varint,7,opt,name=MerchantProductAPIID,proto3" json:"MerchantProductAPIID,omitempty"`
	// 商戶產品API 名稱
	MerchantProductAPIName string `protobuf:"bytes,8,opt,name=MerchantProductAPIName,proto3" json:"MerchantProductAPIName,omitempty"`
	// 商戶sercure key
	MerchantProductAPISecureKey string `protobuf:"bytes,9,opt,name=MerchantProductAPISecureKey,proto3" json:"MerchantProductAPISecureKey,omitempty"`
}

func (x *KbcMerchantInfo) Reset() {
	*x = KbcMerchantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KbcMerchantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KbcMerchantInfo) ProtoMessage() {}

func (x *KbcMerchantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KbcMerchantInfo.ProtoReflect.Descriptor instead.
func (*KbcMerchantInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{1}
}

func (x *KbcMerchantInfo) GetMerchantID() uint64 {
	if x != nil {
		return x.MerchantID
	}
	return 0
}

func (x *KbcMerchantInfo) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *KbcMerchantInfo) GetMerchantProjectID() uint64 {
	if x != nil {
		return x.MerchantProjectID
	}
	return 0
}

func (x *KbcMerchantInfo) GetMerchantProjectName() string {
	if x != nil {
		return x.MerchantProjectName
	}
	return ""
}

func (x *KbcMerchantInfo) GetMerchantProductID() uint64 {
	if x != nil {
		return x.MerchantProductID
	}
	return 0
}

func (x *KbcMerchantInfo) GetMerchantProductName() string {
	if x != nil {
		return x.MerchantProductName
	}
	return ""
}

func (x *KbcMerchantInfo) GetMerchantProductAPIID() uint64 {
	if x != nil {
		return x.MerchantProductAPIID
	}
	return 0
}

func (x *KbcMerchantInfo) GetMerchantProductAPIName() string {
	if x != nil {
		return x.MerchantProductAPIName
	}
	return ""
}

func (x *KbcMerchantInfo) GetMerchantProductAPISecureKey() string {
	if x != nil {
		return x.MerchantProductAPISecureKey
	}
	return ""
}

type OrderCreationPolypayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelMerchantID   string                              `protobuf:"bytes,1,opt,name=ChannelMerchantID,proto3" json:"ChannelMerchantID,omitempty"`
	MerchantOrderNumber string                              `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                             `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                     `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                         `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	NotifyURL           string                              `protobuf:"bytes,6,opt,name=NotifyURL,proto3" json:"NotifyURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                    `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationPolypayReq_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *OrderCreationPolypayReq) Reset() {
	*x = OrderCreationPolypayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationPolypayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationPolypayReq) ProtoMessage() {}

func (x *OrderCreationPolypayReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationPolypayReq.ProtoReflect.Descriptor instead.
func (*OrderCreationPolypayReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{2}
}

func (x *OrderCreationPolypayReq) GetChannelMerchantID() string {
	if x != nil {
		return x.ChannelMerchantID
	}
	return ""
}

func (x *OrderCreationPolypayReq) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationPolypayReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationPolypayReq) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationPolypayReq) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationPolypayReq) GetNotifyURL() string {
	if x != nil {
		return x.NotifyURL
	}
	return ""
}

func (x *OrderCreationPolypayReq) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationPolypayReq) GetInfo() *OrderCreationPolypayReq_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type OrderCreationPolypayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL string `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
}

func (x *OrderCreationPolypayResp) Reset() {
	*x = OrderCreationPolypayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationPolypayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationPolypayResp) ProtoMessage() {}

func (x *OrderCreationPolypayResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationPolypayResp.ProtoReflect.Descriptor instead.
func (*OrderCreationPolypayResp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{3}
}

func (x *OrderCreationPolypayResp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

type OrderCreationShan3Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelMerchantID   string                            `protobuf:"bytes,1,opt,name=ChannelMerchantID,proto3" json:"ChannelMerchantID,omitempty"`
	MerchantOrderNumber string                            `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                           `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                   `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                       `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	NotifyURL           string                            `protobuf:"bytes,6,opt,name=NotifyURL,proto3" json:"NotifyURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                  `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationShan3Req_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *OrderCreationShan3Req) Reset() {
	*x = OrderCreationShan3Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationShan3Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationShan3Req) ProtoMessage() {}

func (x *OrderCreationShan3Req) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationShan3Req.ProtoReflect.Descriptor instead.
func (*OrderCreationShan3Req) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{4}
}

func (x *OrderCreationShan3Req) GetChannelMerchantID() string {
	if x != nil {
		return x.ChannelMerchantID
	}
	return ""
}

func (x *OrderCreationShan3Req) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationShan3Req) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationShan3Req) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationShan3Req) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationShan3Req) GetNotifyURL() string {
	if x != nil {
		return x.NotifyURL
	}
	return ""
}

func (x *OrderCreationShan3Req) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationShan3Req) GetInfo() *OrderCreationShan3Req_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type OrderCreationShan3Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL string `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
}

func (x *OrderCreationShan3Resp) Reset() {
	*x = OrderCreationShan3Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationShan3Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationShan3Resp) ProtoMessage() {}

func (x *OrderCreationShan3Resp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationShan3Resp.ProtoReflect.Descriptor instead.
func (*OrderCreationShan3Resp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{5}
}

func (x *OrderCreationShan3Resp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

type OrderCreationShan6Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelMerchantID   string                            `protobuf:"bytes,1,opt,name=ChannelMerchantID,proto3" json:"ChannelMerchantID,omitempty"`
	MerchantOrderNumber string                            `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                           `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                   `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                       `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	NotifyURL           string                            `protobuf:"bytes,6,opt,name=NotifyURL,proto3" json:"NotifyURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                  `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationShan6Req_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
	PromoteChannel      string                            `protobuf:"bytes,9,opt,name=PromoteChannel,proto3" json:"PromoteChannel,omitempty"`
	Extra               string                            `protobuf:"bytes,10,opt,name=Extra,proto3" json:"Extra,omitempty"`
}

func (x *OrderCreationShan6Req) Reset() {
	*x = OrderCreationShan6Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationShan6Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationShan6Req) ProtoMessage() {}

func (x *OrderCreationShan6Req) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationShan6Req.ProtoReflect.Descriptor instead.
func (*OrderCreationShan6Req) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{6}
}

func (x *OrderCreationShan6Req) GetChannelMerchantID() string {
	if x != nil {
		return x.ChannelMerchantID
	}
	return ""
}

func (x *OrderCreationShan6Req) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationShan6Req) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationShan6Req) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationShan6Req) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationShan6Req) GetNotifyURL() string {
	if x != nil {
		return x.NotifyURL
	}
	return ""
}

func (x *OrderCreationShan6Req) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationShan6Req) GetInfo() *OrderCreationShan6Req_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OrderCreationShan6Req) GetPromoteChannel() string {
	if x != nil {
		return x.PromoteChannel
	}
	return ""
}

func (x *OrderCreationShan6Req) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type OrderCreationShan6Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL string `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
}

func (x *OrderCreationShan6Resp) Reset() {
	*x = OrderCreationShan6Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationShan6Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationShan6Resp) ProtoMessage() {}

func (x *OrderCreationShan6Resp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationShan6Resp.ProtoReflect.Descriptor instead.
func (*OrderCreationShan6Resp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{7}
}

func (x *OrderCreationShan6Resp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

type OrderCreationBeiming1Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelMerchantID   string                               `protobuf:"bytes,1,opt,name=ChannelMerchantID,proto3" json:"ChannelMerchantID,omitempty"`
	MerchantOrderNumber string                               `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                              `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                      `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                          `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	NotifyURL           string                               `protobuf:"bytes,6,opt,name=NotifyURL,proto3" json:"NotifyURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                     `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationBeiming1Req_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
	OrderPath           string                               `protobuf:"bytes,9,opt,name=OrderPath,proto3" json:"OrderPath,omitempty"`
	MoneyPath           string                               `protobuf:"bytes,10,opt,name=MoneyPath,proto3" json:"MoneyPath,omitempty"`
}

func (x *OrderCreationBeiming1Req) Reset() {
	*x = OrderCreationBeiming1Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBeiming1Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBeiming1Req) ProtoMessage() {}

func (x *OrderCreationBeiming1Req) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBeiming1Req.ProtoReflect.Descriptor instead.
func (*OrderCreationBeiming1Req) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{8}
}

func (x *OrderCreationBeiming1Req) GetChannelMerchantID() string {
	if x != nil {
		return x.ChannelMerchantID
	}
	return ""
}

func (x *OrderCreationBeiming1Req) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationBeiming1Req) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationBeiming1Req) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationBeiming1Req) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationBeiming1Req) GetNotifyURL() string {
	if x != nil {
		return x.NotifyURL
	}
	return ""
}

func (x *OrderCreationBeiming1Req) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationBeiming1Req) GetInfo() *OrderCreationBeiming1Req_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OrderCreationBeiming1Req) GetOrderPath() string {
	if x != nil {
		return x.OrderPath
	}
	return ""
}

func (x *OrderCreationBeiming1Req) GetMoneyPath() string {
	if x != nil {
		return x.MoneyPath
	}
	return ""
}

type OrderCreationBeiming1Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL string `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
}

func (x *OrderCreationBeiming1Resp) Reset() {
	*x = OrderCreationBeiming1Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBeiming1Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBeiming1Resp) ProtoMessage() {}

func (x *OrderCreationBeiming1Resp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBeiming1Resp.ProtoReflect.Descriptor instead.
func (*OrderCreationBeiming1Resp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{9}
}

func (x *OrderCreationBeiming1Resp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

type OrderCreationBeiming2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelMerchantID   string                               `protobuf:"bytes,1,opt,name=ChannelMerchantID,proto3" json:"ChannelMerchantID,omitempty"`
	MerchantOrderNumber string                               `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                              `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                      `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                          `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	NotifyURL           string                               `protobuf:"bytes,6,opt,name=NotifyURL,proto3" json:"NotifyURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                     `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationBeiming2Req_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *OrderCreationBeiming2Req) Reset() {
	*x = OrderCreationBeiming2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBeiming2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBeiming2Req) ProtoMessage() {}

func (x *OrderCreationBeiming2Req) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBeiming2Req.ProtoReflect.Descriptor instead.
func (*OrderCreationBeiming2Req) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{10}
}

func (x *OrderCreationBeiming2Req) GetChannelMerchantID() string {
	if x != nil {
		return x.ChannelMerchantID
	}
	return ""
}

func (x *OrderCreationBeiming2Req) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationBeiming2Req) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationBeiming2Req) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationBeiming2Req) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationBeiming2Req) GetNotifyURL() string {
	if x != nil {
		return x.NotifyURL
	}
	return ""
}

func (x *OrderCreationBeiming2Req) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationBeiming2Req) GetInfo() *OrderCreationBeiming2Req_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type OrderCreationBeiming2Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL string `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
}

func (x *OrderCreationBeiming2Resp) Reset() {
	*x = OrderCreationBeiming2Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBeiming2Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBeiming2Resp) ProtoMessage() {}

func (x *OrderCreationBeiming2Resp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBeiming2Resp.ProtoReflect.Descriptor instead.
func (*OrderCreationBeiming2Resp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{11}
}

func (x *OrderCreationBeiming2Resp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

type OrderCreationBankcardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelMerchantID   string                               `protobuf:"bytes,1,opt,name=ChannelMerchantID,proto3" json:"ChannelMerchantID,omitempty"`
	MerchantOrderNumber string                               `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                              `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                      `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                          `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	NotifyURL           string                               `protobuf:"bytes,6,opt,name=NotifyURL,proto3" json:"NotifyURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                     `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationBankcardReq_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
	TrackingNumber      string                               `protobuf:"bytes,9,opt,name=TrackingNumber,proto3" json:"TrackingNumber,omitempty"`
}

func (x *OrderCreationBankcardReq) Reset() {
	*x = OrderCreationBankcardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBankcardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBankcardReq) ProtoMessage() {}

func (x *OrderCreationBankcardReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBankcardReq.ProtoReflect.Descriptor instead.
func (*OrderCreationBankcardReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{12}
}

func (x *OrderCreationBankcardReq) GetChannelMerchantID() string {
	if x != nil {
		return x.ChannelMerchantID
	}
	return ""
}

func (x *OrderCreationBankcardReq) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationBankcardReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationBankcardReq) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationBankcardReq) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationBankcardReq) GetNotifyURL() string {
	if x != nil {
		return x.NotifyURL
	}
	return ""
}

func (x *OrderCreationBankcardReq) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationBankcardReq) GetInfo() *OrderCreationBankcardReq_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OrderCreationBankcardReq) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

type OrderCreationVGAMReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingNumber      string                           `protobuf:"bytes,1,opt,name=TrackingNumber,proto3" json:"TrackingNumber,omitempty"`
	WangGuanMerchantID  string                           `protobuf:"bytes,2,opt,name=WangGuanMerchantID,proto3" json:"WangGuanMerchantID,omitempty"`
	MerchantOrderNumber string                           `protobuf:"bytes,3,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	MerchantID          int64                            `protobuf:"varint,4,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	MerchantName        string                           `protobuf:"bytes,5,opt,name=MerchantName,proto3" json:"MerchantName,omitempty"`
	OldOrderUID         string                           `protobuf:"bytes,6,opt,name=OldOrderUID,proto3" json:"OldOrderUID,omitempty"`
	Amount              float64                          `protobuf:"fixed64,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                  `protobuf:"varint,8,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                      `protobuf:"varint,9,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	CallBackURL         string                           `protobuf:"bytes,10,opt,name=CallBackURL,proto3" json:"CallBackURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                 `protobuf:"bytes,11,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationVGAMReq_PlayerInfo `protobuf:"bytes,12,opt,name=Info,proto3" json:"Info,omitempty"`
	BusinessID          int64                            `protobuf:"varint,13,opt,name=BusinessID,proto3" json:"BusinessID,omitempty"`
	IsSettleByBS        int32                            `protobuf:"varint,14,opt,name=IsSettleByBS,proto3" json:"IsSettleByBS,omitempty"`
	IsAutomatic         int32                            `protobuf:"varint,15,opt,name=IsAutomatic,proto3" json:"IsAutomatic,omitempty"`
	FeeType             int32                            `protobuf:"varint,16,opt,name=FeeType,proto3" json:"FeeType,omitempty"`
	Fee                 float64                          `protobuf:"fixed64,17,opt,name=Fee,proto3" json:"Fee,omitempty"`
	BankCode            string                           `protobuf:"bytes,18,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	AccountUIDRec       string                           `protobuf:"bytes,19,opt,name=AccountUIDRec,proto3" json:"AccountUIDRec,omitempty"`
	AccountName         string                           `protobuf:"bytes,20,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	BankNameRec         string                           `protobuf:"bytes,21,opt,name=BankNameRec,proto3" json:"BankNameRec,omitempty"`
	BankBranchNameRec   string                           `protobuf:"bytes,22,opt,name=BankBranchNameRec,proto3" json:"BankBranchNameRec,omitempty"`
	BankShengRec        string                           `protobuf:"bytes,23,opt,name=BankShengRec,proto3" json:"BankShengRec,omitempty"`
	BankShiRec          string                           `protobuf:"bytes,24,opt,name=BankShiRec,proto3" json:"BankShiRec,omitempty"`
	SleepSeconds        int64                            `protobuf:"varint,25,opt,name=SleepSeconds,proto3" json:"SleepSeconds,omitempty"`
	BsCreator           string                           `protobuf:"bytes,26,opt,name=BsCreator,proto3" json:"BsCreator,omitempty"`
	BsIP                string                           `protobuf:"bytes,27,opt,name=BsIP,proto3" json:"BsIP,omitempty"`
	BsMeta              string                           `protobuf:"bytes,28,opt,name=BsMeta,proto3" json:"BsMeta,omitempty"`
}

func (x *OrderCreationVGAMReq) Reset() {
	*x = OrderCreationVGAMReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationVGAMReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationVGAMReq) ProtoMessage() {}

func (x *OrderCreationVGAMReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationVGAMReq.ProtoReflect.Descriptor instead.
func (*OrderCreationVGAMReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{13}
}

func (x *OrderCreationVGAMReq) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetWangGuanMerchantID() string {
	if x != nil {
		return x.WangGuanMerchantID
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetMerchantID() int64 {
	if x != nil {
		return x.MerchantID
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetOldOrderUID() string {
	if x != nil {
		return x.OldOrderUID
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationVGAMReq) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationVGAMReq) GetCallBackURL() string {
	if x != nil {
		return x.CallBackURL
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationVGAMReq) GetInfo() *OrderCreationVGAMReq_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OrderCreationVGAMReq) GetBusinessID() int64 {
	if x != nil {
		return x.BusinessID
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetIsSettleByBS() int32 {
	if x != nil {
		return x.IsSettleByBS
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetIsAutomatic() int32 {
	if x != nil {
		return x.IsAutomatic
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetFeeType() int32 {
	if x != nil {
		return x.FeeType
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetAccountUIDRec() string {
	if x != nil {
		return x.AccountUIDRec
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetBankNameRec() string {
	if x != nil {
		return x.BankNameRec
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetBankBranchNameRec() string {
	if x != nil {
		return x.BankBranchNameRec
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetBankShengRec() string {
	if x != nil {
		return x.BankShengRec
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetBankShiRec() string {
	if x != nil {
		return x.BankShiRec
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetSleepSeconds() int64 {
	if x != nil {
		return x.SleepSeconds
	}
	return 0
}

func (x *OrderCreationVGAMReq) GetBsCreator() string {
	if x != nil {
		return x.BsCreator
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetBsIP() string {
	if x != nil {
		return x.BsIP
	}
	return ""
}

func (x *OrderCreationVGAMReq) GetBsMeta() string {
	if x != nil {
		return x.BsMeta
	}
	return ""
}

type OrderCreationVATPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID          string                           `protobuf:"bytes,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	MerchantOrderNumber string                           `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	Amount              float64                          `protobuf:"fixed64,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransactionType     TransactionType                  `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType                      `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	CallBackURL         string                           `protobuf:"bytes,6,opt,name=CallBackURL,proto3" json:"CallBackURL,omitempty"`
	MerchantInfo        *KbcMerchantInfo                 `protobuf:"bytes,7,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	Info                *OrderCreationVATPReq_PlayerInfo `protobuf:"bytes,8,opt,name=Info,proto3" json:"Info,omitempty"`
	GatewayPath         string                           `protobuf:"bytes,9,opt,name=GatewayPath,proto3" json:"GatewayPath,omitempty"`
	DisplayType         int32                            `protobuf:"varint,10,opt,name=DisplayType,proto3" json:"DisplayType,omitempty"`
	FeeType             int32                            `protobuf:"varint,16,opt,name=FeeType,proto3" json:"FeeType,omitempty"`
	Fee                 float64                          `protobuf:"fixed64,17,opt,name=Fee,proto3" json:"Fee,omitempty"`
}

func (x *OrderCreationVATPReq) Reset() {
	*x = OrderCreationVATPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationVATPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationVATPReq) ProtoMessage() {}

func (x *OrderCreationVATPReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationVATPReq.ProtoReflect.Descriptor instead.
func (*OrderCreationVATPReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{14}
}

func (x *OrderCreationVATPReq) GetMerchantID() string {
	if x != nil {
		return x.MerchantID
	}
	return ""
}

func (x *OrderCreationVATPReq) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationVATPReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationVATPReq) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationVATPReq) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationVATPReq) GetCallBackURL() string {
	if x != nil {
		return x.CallBackURL
	}
	return ""
}

func (x *OrderCreationVATPReq) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationVATPReq) GetInfo() *OrderCreationVATPReq_PlayerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OrderCreationVATPReq) GetGatewayPath() string {
	if x != nil {
		return x.GatewayPath
	}
	return ""
}

func (x *OrderCreationVATPReq) GetDisplayType() int32 {
	if x != nil {
		return x.DisplayType
	}
	return 0
}

func (x *OrderCreationVATPReq) GetFeeType() int32 {
	if x != nil {
		return x.FeeType
	}
	return 0
}

func (x *OrderCreationVATPReq) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type OrderCreationVATPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL        string  `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
	OrderUID          string  `protobuf:"bytes,2,opt,name=OrderUID,proto3" json:"OrderUID,omitempty"`
	MerchantOrderID   string  `protobuf:"bytes,3,opt,name=MerchantOrderID,proto3" json:"MerchantOrderID,omitempty"`
	ExpiredAt         string  `protobuf:"bytes,4,opt,name=ExpiredAt,proto3" json:"ExpiredAt,omitempty"`
	BankNameRec       string  `protobuf:"bytes,5,opt,name=BankNameRec,proto3" json:"BankNameRec,omitempty"`
	BankBranchNameRec string  `protobuf:"bytes,6,opt,name=BankBranchNameRec,proto3" json:"BankBranchNameRec,omitempty"`
	BankCodeRec       string  `protobuf:"bytes,7,opt,name=BankCodeRec,proto3" json:"BankCodeRec,omitempty"`
	BankShenRec       string  `protobuf:"bytes,8,opt,name=BankShenRec,proto3" json:"BankShenRec,omitempty"`
	BankShiRec        string  `protobuf:"bytes,9,opt,name=BankShiRec,proto3" json:"BankShiRec,omitempty"`
	AccountRec        string  `protobuf:"bytes,10,opt,name=AccountRec,proto3" json:"AccountRec,omitempty"`
	AccountUIDRec     string  `protobuf:"bytes,11,opt,name=AccountUIDRec,proto3" json:"AccountUIDRec,omitempty"`
	ExpectedAmount    float64 `protobuf:"fixed64,12,opt,name=ExpectedAmount,proto3" json:"ExpectedAmount,omitempty"`
}

func (x *OrderCreationVATPResp) Reset() {
	*x = OrderCreationVATPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationVATPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationVATPResp) ProtoMessage() {}

func (x *OrderCreationVATPResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationVATPResp.ProtoReflect.Descriptor instead.
func (*OrderCreationVATPResp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{15}
}

func (x *OrderCreationVATPResp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

func (x *OrderCreationVATPResp) GetOrderUID() string {
	if x != nil {
		return x.OrderUID
	}
	return ""
}

func (x *OrderCreationVATPResp) GetMerchantOrderID() string {
	if x != nil {
		return x.MerchantOrderID
	}
	return ""
}

func (x *OrderCreationVATPResp) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

func (x *OrderCreationVATPResp) GetBankNameRec() string {
	if x != nil {
		return x.BankNameRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetBankBranchNameRec() string {
	if x != nil {
		return x.BankBranchNameRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetBankCodeRec() string {
	if x != nil {
		return x.BankCodeRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetBankShenRec() string {
	if x != nil {
		return x.BankShenRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetBankShiRec() string {
	if x != nil {
		return x.BankShiRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetAccountRec() string {
	if x != nil {
		return x.AccountRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetAccountUIDRec() string {
	if x != nil {
		return x.AccountUIDRec
	}
	return ""
}

func (x *OrderCreationVATPResp) GetExpectedAmount() float64 {
	if x != nil {
		return x.ExpectedAmount
	}
	return 0
}

type OrderHealthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderHealthReq) Reset() {
	*x = OrderHealthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderHealthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderHealthReq) ProtoMessage() {}

func (x *OrderHealthReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderHealthReq.ProtoReflect.Descriptor instead.
func (*OrderHealthReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{16}
}

type OrderHealthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceMap map[string]string `protobuf:"bytes,1,rep,name=ServiceMap,proto3" json:"ServiceMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // server , status .ex: "mysql":"ok" or "mysql":"error_connectFail"
}

func (x *OrderHealthResp) Reset() {
	*x = OrderHealthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderHealthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderHealthResp) ProtoMessage() {}

func (x *OrderHealthResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderHealthResp.ProtoReflect.Descriptor instead.
func (*OrderHealthResp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{17}
}

func (x *OrderHealthResp) GetServiceMap() map[string]string {
	if x != nil {
		return x.ServiceMap
	}
	return nil
}

type OrderCreationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	APIKey              string           `protobuf:"bytes,1,opt,name=APIKey,proto3" json:"APIKey,omitempty"`
	MerchantOrderNumber string           `protobuf:"bytes,2,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	MerchantInfo        *KbcMerchantInfo `protobuf:"bytes,3,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	TransactionType     TransactionType  `protobuf:"varint,4,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType      `protobuf:"varint,5,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	PaymentInfo         []byte           `protobuf:"bytes,6,opt,name=PaymentInfo,proto3" json:"PaymentInfo,omitempty"`
	Amount              float64          `protobuf:"fixed64,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	PlayerInfo          *PlayerInfo      `protobuf:"bytes,8,opt,name=PlayerInfo,proto3" json:"PlayerInfo,omitempty"`
	DiscountCode        string           `protobuf:"bytes,9,opt,name=DiscountCode,proto3" json:"DiscountCode,omitempty"`
	CallbackURL         string           `protobuf:"bytes,10,opt,name=CallbackURL,proto3" json:"CallbackURL,omitempty"`
}

func (x *OrderCreationReq) Reset() {
	*x = OrderCreationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationReq) ProtoMessage() {}

func (x *OrderCreationReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationReq.ProtoReflect.Descriptor instead.
func (*OrderCreationReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{18}
}

func (x *OrderCreationReq) GetAPIKey() string {
	if x != nil {
		return x.APIKey
	}
	return ""
}

func (x *OrderCreationReq) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *OrderCreationReq) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *OrderCreationReq) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *OrderCreationReq) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *OrderCreationReq) GetPaymentInfo() []byte {
	if x != nil {
		return x.PaymentInfo
	}
	return nil
}

func (x *OrderCreationReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderCreationReq) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *OrderCreationReq) GetDiscountCode() string {
	if x != nil {
		return x.DiscountCode
	}
	return ""
}

func (x *OrderCreationReq) GetCallbackURL() string {
	if x != nil {
		return x.CallbackURL
	}
	return ""
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID   string `protobuf:"bytes,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	DeviceID   string `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	DeviceIP   string `protobuf:"bytes,3,opt,name=DeviceIP,proto3" json:"DeviceIP,omitempty"`
	DeviceType string `protobuf:"bytes,4,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"`
	Telephone  string `protobuf:"bytes,5,opt,name=Telephone,proto3" json:"Telephone,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	PayAccount string `protobuf:"bytes,7,opt,name=PayAccount,proto3" json:"PayAccount,omitempty"`
	AlipayName string `protobuf:"bytes,8,opt,name=AlipayName,proto3" json:"AlipayName,omitempty"`
	Metadata   string `protobuf:"bytes,9,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{19}
}

func (x *PlayerInfo) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *PlayerInfo) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *PlayerInfo) GetDeviceIP() string {
	if x != nil {
		return x.DeviceIP
	}
	return ""
}

func (x *PlayerInfo) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *PlayerInfo) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *PlayerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerInfo) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *PlayerInfo) GetAlipayName() string {
	if x != nil {
		return x.AlipayName
	}
	return ""
}

func (x *PlayerInfo) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type OrderCreationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentURL        string  `protobuf:"bytes,1,opt,name=PaymentURL,proto3" json:"PaymentURL,omitempty"`
	OrderUID          string  `protobuf:"bytes,2,opt,name=OrderUID,proto3" json:"OrderUID,omitempty"`
	MerchantOrderID   string  `protobuf:"bytes,3,opt,name=MerchantOrderID,proto3" json:"MerchantOrderID,omitempty"`
	ExpiredAt         string  `protobuf:"bytes,4,opt,name=ExpiredAt,proto3" json:"ExpiredAt,omitempty"`
	BankNameRec       string  `protobuf:"bytes,5,opt,name=BankNameRec,proto3" json:"BankNameRec,omitempty"`
	BankBranchNameRec string  `protobuf:"bytes,6,opt,name=BankBranchNameRec,proto3" json:"BankBranchNameRec,omitempty"`
	BankCodeRec       string  `protobuf:"bytes,7,opt,name=BankCodeRec,proto3" json:"BankCodeRec,omitempty"`
	BankShenRec       string  `protobuf:"bytes,8,opt,name=BankShenRec,proto3" json:"BankShenRec,omitempty"`
	BankShiRec        string  `protobuf:"bytes,9,opt,name=BankShiRec,proto3" json:"BankShiRec,omitempty"`
	AccountRec        string  `protobuf:"bytes,10,opt,name=AccountRec,proto3" json:"AccountRec,omitempty"`
	AccountUIDRec     string  `protobuf:"bytes,11,opt,name=AccountUIDRec,proto3" json:"AccountUIDRec,omitempty"`
	ExpectedAmount    float64 `protobuf:"fixed64,12,opt,name=ExpectedAmount,proto3" json:"ExpectedAmount,omitempty"`
}

func (x *OrderCreationResp) Reset() {
	*x = OrderCreationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationResp) ProtoMessage() {}

func (x *OrderCreationResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationResp.ProtoReflect.Descriptor instead.
func (*OrderCreationResp) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{20}
}

func (x *OrderCreationResp) GetPaymentURL() string {
	if x != nil {
		return x.PaymentURL
	}
	return ""
}

func (x *OrderCreationResp) GetOrderUID() string {
	if x != nil {
		return x.OrderUID
	}
	return ""
}

func (x *OrderCreationResp) GetMerchantOrderID() string {
	if x != nil {
		return x.MerchantOrderID
	}
	return ""
}

func (x *OrderCreationResp) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

func (x *OrderCreationResp) GetBankNameRec() string {
	if x != nil {
		return x.BankNameRec
	}
	return ""
}

func (x *OrderCreationResp) GetBankBranchNameRec() string {
	if x != nil {
		return x.BankBranchNameRec
	}
	return ""
}

func (x *OrderCreationResp) GetBankCodeRec() string {
	if x != nil {
		return x.BankCodeRec
	}
	return ""
}

func (x *OrderCreationResp) GetBankShenRec() string {
	if x != nil {
		return x.BankShenRec
	}
	return ""
}

func (x *OrderCreationResp) GetBankShiRec() string {
	if x != nil {
		return x.BankShiRec
	}
	return ""
}

func (x *OrderCreationResp) GetAccountRec() string {
	if x != nil {
		return x.AccountRec
	}
	return ""
}

func (x *OrderCreationResp) GetAccountUIDRec() string {
	if x != nil {
		return x.AccountUIDRec
	}
	return ""
}

func (x *OrderCreationResp) GetExpectedAmount() float64 {
	if x != nil {
		return x.ExpectedAmount
	}
	return 0
}

// Deposit
type DepositOrderCreationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingNumber      string              `protobuf:"bytes,1,opt,name=TrackingNumber,proto3" json:"TrackingNumber,omitempty"`
	APIKey              string              `protobuf:"bytes,2,opt,name=APIKey,proto3" json:"APIKey,omitempty"`
	MerchantOrderNumber string              `protobuf:"bytes,3,opt,name=MerchantOrderNumber,proto3" json:"MerchantOrderNumber,omitempty"`
	MerchantInfo        *KbcMerchantInfo    `protobuf:"bytes,4,opt,name=MerchantInfo,proto3" json:"MerchantInfo,omitempty"`
	TransactionType     TransactionType     `protobuf:"varint,5,opt,name=TransactionType,proto3,enum=order.TransactionType" json:"TransactionType,omitempty"`
	PaymentType         PaymentType         `protobuf:"varint,6,opt,name=PaymentType,proto3,enum=order.PaymentType" json:"PaymentType,omitempty"`
	PaymentInfo         *DepositPaymentInfo `protobuf:"bytes,7,opt,name=PaymentInfo,proto3" json:"PaymentInfo,omitempty"`
	Amount              float64             `protobuf:"fixed64,8,opt,name=Amount,proto3" json:"Amount,omitempty"`
	PlayerInfo          *PlayerInfo         `protobuf:"bytes,9,opt,name=PlayerInfo,proto3" json:"PlayerInfo,omitempty"`
	CallbackURL         string              `protobuf:"bytes,10,opt,name=CallbackURL,proto3" json:"CallbackURL,omitempty"`
	Metadata            []byte              `protobuf:"bytes,11,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *DepositOrderCreationReq) Reset() {
	*x = DepositOrderCreationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositOrderCreationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositOrderCreationReq) ProtoMessage() {}

func (x *DepositOrderCreationReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositOrderCreationReq.ProtoReflect.Descriptor instead.
func (*DepositOrderCreationReq) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{21}
}

func (x *DepositOrderCreationReq) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

func (x *DepositOrderCreationReq) GetAPIKey() string {
	if x != nil {
		return x.APIKey
	}
	return ""
}

func (x *DepositOrderCreationReq) GetMerchantOrderNumber() string {
	if x != nil {
		return x.MerchantOrderNumber
	}
	return ""
}

func (x *DepositOrderCreationReq) GetMerchantInfo() *KbcMerchantInfo {
	if x != nil {
		return x.MerchantInfo
	}
	return nil
}

func (x *DepositOrderCreationReq) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TRANSACTION_UNKNOW
}

func (x *DepositOrderCreationReq) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNKNOW
}

func (x *DepositOrderCreationReq) GetPaymentInfo() *DepositPaymentInfo {
	if x != nil {
		return x.PaymentInfo
	}
	return nil
}

func (x *DepositOrderCreationReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositOrderCreationReq) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *DepositOrderCreationReq) GetCallbackURL() string {
	if x != nil {
		return x.CallbackURL
	}
	return ""
}

func (x *DepositOrderCreationReq) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DepositPaymentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountUID     string `protobuf:"bytes,1,opt,name=AccountUID,proto3" json:"AccountUID,omitempty"`
	AccountName    string `protobuf:"bytes,2,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	BankCode       string `protobuf:"bytes,3,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	BankName       string `protobuf:"bytes,4,opt,name=BankName,proto3" json:"BankName,omitempty"`
	BankBranchName string `protobuf:"bytes,5,opt,name=BankBranchName,proto3" json:"BankBranchName,omitempty"`
	BankProvince   string `protobuf:"bytes,6,opt,name=BankProvince,proto3" json:"BankProvince,omitempty"`
	BankCity       string `protobuf:"bytes,7,opt,name=BankCity,proto3" json:"BankCity,omitempty"`
}

func (x *DepositPaymentInfo) Reset() {
	*x = DepositPaymentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositPaymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositPaymentInfo) ProtoMessage() {}

func (x *DepositPaymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositPaymentInfo.ProtoReflect.Descriptor instead.
func (*DepositPaymentInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{22}
}

func (x *DepositPaymentInfo) GetAccountUID() string {
	if x != nil {
		return x.AccountUID
	}
	return ""
}

func (x *DepositPaymentInfo) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *DepositPaymentInfo) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *DepositPaymentInfo) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *DepositPaymentInfo) GetBankBranchName() string {
	if x != nil {
		return x.BankBranchName
	}
	return ""
}

func (x *DepositPaymentInfo) GetBankProvince() string {
	if x != nil {
		return x.BankProvince
	}
	return ""
}

func (x *DepositPaymentInfo) GetBankCity() string {
	if x != nil {
		return x.BankCity
	}
	return ""
}

type OrderCreationPolypayReq_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo   *UserBaseInfo `protobuf:"bytes,1,opt,name=BaseInfo,proto3" json:"BaseInfo,omitempty"`
	PayAccount string        `protobuf:"bytes,2,opt,name=PayAccount,proto3" json:"PayAccount,omitempty"`
	Metadata   string        `protobuf:"bytes,3,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *OrderCreationPolypayReq_PlayerInfo) Reset() {
	*x = OrderCreationPolypayReq_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationPolypayReq_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationPolypayReq_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationPolypayReq_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationPolypayReq_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationPolypayReq_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{2, 0}
}

func (x *OrderCreationPolypayReq_PlayerInfo) GetBaseInfo() *UserBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *OrderCreationPolypayReq_PlayerInfo) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *OrderCreationPolypayReq_PlayerInfo) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type OrderCreationShan3Req_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo   *UserBaseInfo `protobuf:"bytes,1,opt,name=BaseInfo,proto3" json:"BaseInfo,omitempty"`
	PayAccount string        `protobuf:"bytes,2,opt,name=PayAccount,proto3" json:"PayAccount,omitempty"`
	Userdata   string        `protobuf:"bytes,3,opt,name=Userdata,proto3" json:"Userdata,omitempty"`
}

func (x *OrderCreationShan3Req_PlayerInfo) Reset() {
	*x = OrderCreationShan3Req_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationShan3Req_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationShan3Req_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationShan3Req_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationShan3Req_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationShan3Req_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{4, 0}
}

func (x *OrderCreationShan3Req_PlayerInfo) GetBaseInfo() *UserBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *OrderCreationShan3Req_PlayerInfo) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *OrderCreationShan3Req_PlayerInfo) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

type OrderCreationShan6Req_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo *UserBaseInfo `protobuf:"bytes,1,opt,name=BaseInfo,proto3" json:"BaseInfo,omitempty"`
	AllName  string        `protobuf:"bytes,2,opt,name=AllName,proto3" json:"AllName,omitempty"`
}

func (x *OrderCreationShan6Req_PlayerInfo) Reset() {
	*x = OrderCreationShan6Req_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationShan6Req_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationShan6Req_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationShan6Req_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationShan6Req_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationShan6Req_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{6, 0}
}

func (x *OrderCreationShan6Req_PlayerInfo) GetBaseInfo() *UserBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *OrderCreationShan6Req_PlayerInfo) GetAllName() string {
	if x != nil {
		return x.AllName
	}
	return ""
}

type OrderCreationBeiming1Req_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo *UserBaseInfo `protobuf:"bytes,1,opt,name=BaseInfo,proto3" json:"BaseInfo,omitempty"`
}

func (x *OrderCreationBeiming1Req_PlayerInfo) Reset() {
	*x = OrderCreationBeiming1Req_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBeiming1Req_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBeiming1Req_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationBeiming1Req_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBeiming1Req_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationBeiming1Req_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{8, 0}
}

func (x *OrderCreationBeiming1Req_PlayerInfo) GetBaseInfo() *UserBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

type OrderCreationBeiming2Req_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo         *UserBaseInfo `protobuf:"bytes,1,opt,name=BaseInfo,proto3" json:"BaseInfo,omitempty"`
	BankCard         string        `protobuf:"bytes,2,opt,name=BankCard,proto3" json:"BankCard,omitempty"`
	BankCode         string        `protobuf:"bytes,3,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	BankcardInfoOnly bool          `protobuf:"varint,4,opt,name=BankcardInfoOnly,proto3" json:"BankcardInfoOnly,omitempty"`
}

func (x *OrderCreationBeiming2Req_PlayerInfo) Reset() {
	*x = OrderCreationBeiming2Req_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBeiming2Req_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBeiming2Req_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationBeiming2Req_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBeiming2Req_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationBeiming2Req_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{10, 0}
}

func (x *OrderCreationBeiming2Req_PlayerInfo) GetBaseInfo() *UserBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *OrderCreationBeiming2Req_PlayerInfo) GetBankCard() string {
	if x != nil {
		return x.BankCard
	}
	return ""
}

func (x *OrderCreationBeiming2Req_PlayerInfo) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *OrderCreationBeiming2Req_PlayerInfo) GetBankcardInfoOnly() bool {
	if x != nil {
		return x.BankcardInfoOnly
	}
	return false
}

type OrderCreationBankcardReq_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo *UserBaseInfo `protobuf:"bytes,1,opt,name=BaseInfo,proto3" json:"BaseInfo,omitempty"`
	Bankcard string        `protobuf:"bytes,2,opt,name=Bankcard,proto3" json:"Bankcard,omitempty"`
	BankCode string        `protobuf:"bytes,3,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
}

func (x *OrderCreationBankcardReq_PlayerInfo) Reset() {
	*x = OrderCreationBankcardReq_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationBankcardReq_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationBankcardReq_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationBankcardReq_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationBankcardReq_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationBankcardReq_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{12, 0}
}

func (x *OrderCreationBankcardReq_PlayerInfo) GetBaseInfo() *UserBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *OrderCreationBankcardReq_PlayerInfo) GetBankcard() string {
	if x != nil {
		return x.Bankcard
	}
	return ""
}

func (x *OrderCreationBankcardReq_PlayerInfo) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

type OrderCreationVGAMReq_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUID  string `protobuf:"bytes,1,opt,name=PlayerUID,proto3" json:"PlayerUID,omitempty"`
	AccountUID string `protobuf:"bytes,2,opt,name=AccountUID,proto3" json:"AccountUID,omitempty"`
}

func (x *OrderCreationVGAMReq_PlayerInfo) Reset() {
	*x = OrderCreationVGAMReq_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationVGAMReq_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationVGAMReq_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationVGAMReq_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationVGAMReq_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationVGAMReq_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{13, 0}
}

func (x *OrderCreationVGAMReq_PlayerInfo) GetPlayerUID() string {
	if x != nil {
		return x.PlayerUID
	}
	return ""
}

func (x *OrderCreationVGAMReq_PlayerInfo) GetAccountUID() string {
	if x != nil {
		return x.AccountUID
	}
	return ""
}

type OrderCreationVATPReq_PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayerID    string `protobuf:"bytes,1,opt,name=PayerID,proto3" json:"PayerID,omitempty"`
	DeviceType int32  `protobuf:"varint,2,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"`
	IP         string `protobuf:"bytes,3,opt,name=IP,proto3" json:"IP,omitempty"`
}

func (x *OrderCreationVATPReq_PlayerInfo) Reset() {
	*x = OrderCreationVATPReq_PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderCreate_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreationVATPReq_PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreationVATPReq_PlayerInfo) ProtoMessage() {}

func (x *OrderCreationVATPReq_PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderCreate_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreationVATPReq_PlayerInfo.ProtoReflect.Descriptor instead.
func (*OrderCreationVATPReq_PlayerInfo) Descriptor() ([]byte, []int) {
	return file_order_orderCreate_proto_rawDescGZIP(), []int{14, 0}
}

func (x *OrderCreationVATPReq_PlayerInfo) GetPayerID() string {
	if x != nil {
		return x.PayerID
	}
	return ""
}

func (x *OrderCreationVATPReq_PlayerInfo) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *OrderCreationVATPReq_PlayerInfo) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

var File_order_orderCreate_proto protoreflect.FileDescriptor

var file_order_orderCreate_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x03, 0x0a, 0x0f, 0x4b, 0x62, 0x63, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a,
	0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a,
	0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x50, 0x49, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x50,
	0x49, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x50, 0x49, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x50, 0x49, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x50,
	0x49, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x50, 0x49, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x9d, 0x04,
	0x0a, 0x17, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x79, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2f, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a,
	0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x79, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x99, 0x04, 0x0a, 0x15, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x33,
	0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x52,
	0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x6e, 0x33, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x79, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x33, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x22,
	0xb5, 0x04, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x52, 0x65, 0x71, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x57,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52,
	0x4c, 0x22, 0x9f, 0x04, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x52, 0x65, 0x71, 0x12, 0x2c,
	0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x31, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x1a, 0x3d, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c,
	0x22, 0xc8, 0x04, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x32, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x32, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa1, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4f,
	0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x42, 0x61, 0x6e, 0x6b, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x3b, 0x0a, 0x19, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x22, 0xc3, 0x04, 0x0a, 0x18, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x34, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55,
	0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x75, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xf4,
	0x08, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x12, 0x57, 0x61, 0x6e, 0x67, 0x47, 0x75, 0x61, 0x6e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x57, 0x61, 0x6e,
	0x67, 0x47, 0x75, 0x61, 0x6e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x30, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6c, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x6c, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x42,
	0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61,
	0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x71,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x79, 0x42,
	0x53, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x49, 0x73, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x42, 0x79, 0x42, 0x53, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x46, 0x65, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x52, 0x65, 0x63,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x49, 0x44, 0x52, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61,
	0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x6e,
	0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x53,
	0x68, 0x65, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42,
	0x61, 0x6e, 0x6b, 0x53, 0x68, 0x65, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x61, 0x6e, 0x6b, 0x53, 0x68, 0x69, 0x52, 0x65, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x69, 0x52, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x6c, 0x65, 0x65, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x42, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x42, 0x73, 0x49, 0x50, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x73, 0x49,
	0x50, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x42, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x4a, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x49, 0x44, 0x22, 0xda, 0x04, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x41, 0x54, 0x50, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x30,
	0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x55,
	0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4b, 0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x41, 0x54, 0x50, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x46, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x46, 0x65, 0x65, 0x1a, 0x56, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x50, 0x22, 0xbd, 0x03, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x41, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42,
	0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x65, 0x6e, 0x52, 0x65,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x65,
	0x6e, 0x52, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x69, 0x52,
	0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68,
	0x69, 0x52, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x49, 0x44, 0x52, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x52, 0x65, 0x63, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70,
	0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc3, 0x03, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x13,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a,
	0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x62, 0x63,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55,
	0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x52, 0x4c, 0x22, 0x8e, 0x02, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x03, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42,
	0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x65, 0x6e, 0x52, 0x65,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x65,
	0x6e, 0x52, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68, 0x69, 0x52,
	0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x53, 0x68,
	0x69, 0x52, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x49, 0x44, 0x52, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x52, 0x65, 0x63, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x85, 0x04, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b,
	0x62, 0x63, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x12, 0x1a,
	0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf6, 0x01, 0x0a, 0x12, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x42,
	0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x69, 0x74, 0x79, 0x2a, 0x47, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x49, 0x50, 0x41, 0x59,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x42, 0x41, 0x4e, 0x4b, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03, 0x2a, 0x44, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57,
	0x10, 0x02, 0x32, 0xad, 0x05, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61,
	0x79, 0x12, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x33, 0x12, 0x1c, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x68, 0x61, 0x6e, 0x33, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68,
	0x61, 0x6e, 0x33, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x12,
	0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x31, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x32, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x32, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x41, 0x54, 0x50, 0x12,
	0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x41, 0x54, 0x50, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x41, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_orderCreate_proto_rawDescOnce sync.Once
	file_order_orderCreate_proto_rawDescData = file_order_orderCreate_proto_rawDesc
)

func file_order_orderCreate_proto_rawDescGZIP() []byte {
	file_order_orderCreate_proto_rawDescOnce.Do(func() {
		file_order_orderCreate_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_orderCreate_proto_rawDescData)
	})
	return file_order_orderCreate_proto_rawDescData
}

var file_order_orderCreate_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_order_orderCreate_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_order_orderCreate_proto_goTypes = []interface{}{
	(PaymentType)(0),                            // 0: order.PaymentType
	(TransactionType)(0),                        // 1: order.TransactionType
	(*UserBaseInfo)(nil),                        // 2: order.UserBaseInfo
	(*KbcMerchantInfo)(nil),                     // 3: order.KbcMerchantInfo
	(*OrderCreationPolypayReq)(nil),             // 4: order.OrderCreationPolypayReq
	(*OrderCreationPolypayResp)(nil),            // 5: order.OrderCreationPolypayResp
	(*OrderCreationShan3Req)(nil),               // 6: order.OrderCreationShan3Req
	(*OrderCreationShan3Resp)(nil),              // 7: order.OrderCreationShan3Resp
	(*OrderCreationShan6Req)(nil),               // 8: order.OrderCreationShan6Req
	(*OrderCreationShan6Resp)(nil),              // 9: order.OrderCreationShan6Resp
	(*OrderCreationBeiming1Req)(nil),            // 10: order.OrderCreationBeiming1Req
	(*OrderCreationBeiming1Resp)(nil),           // 11: order.OrderCreationBeiming1Resp
	(*OrderCreationBeiming2Req)(nil),            // 12: order.OrderCreationBeiming2Req
	(*OrderCreationBeiming2Resp)(nil),           // 13: order.OrderCreationBeiming2Resp
	(*OrderCreationBankcardReq)(nil),            // 14: order.OrderCreationBankcardReq
	(*OrderCreationVGAMReq)(nil),                // 15: order.OrderCreationVGAMReq
	(*OrderCreationVATPReq)(nil),                // 16: order.OrderCreationVATPReq
	(*OrderCreationVATPResp)(nil),               // 17: order.OrderCreationVATPResp
	(*OrderHealthReq)(nil),                      // 18: order.OrderHealthReq
	(*OrderHealthResp)(nil),                     // 19: order.OrderHealthResp
	(*OrderCreationReq)(nil),                    // 20: order.OrderCreationReq
	(*PlayerInfo)(nil),                          // 21: order.PlayerInfo
	(*OrderCreationResp)(nil),                   // 22: order.OrderCreationResp
	(*DepositOrderCreationReq)(nil),             // 23: order.DepositOrderCreationReq
	(*DepositPaymentInfo)(nil),                  // 24: order.DepositPaymentInfo
	(*OrderCreationPolypayReq_PlayerInfo)(nil),  // 25: order.OrderCreationPolypayReq.PlayerInfo
	(*OrderCreationShan3Req_PlayerInfo)(nil),    // 26: order.OrderCreationShan3Req.PlayerInfo
	(*OrderCreationShan6Req_PlayerInfo)(nil),    // 27: order.OrderCreationShan6Req.PlayerInfo
	(*OrderCreationBeiming1Req_PlayerInfo)(nil), // 28: order.OrderCreationBeiming1Req.PlayerInfo
	(*OrderCreationBeiming2Req_PlayerInfo)(nil), // 29: order.OrderCreationBeiming2Req.PlayerInfo
	(*OrderCreationBankcardReq_PlayerInfo)(nil), // 30: order.OrderCreationBankcardReq.PlayerInfo
	(*OrderCreationVGAMReq_PlayerInfo)(nil),     // 31: order.OrderCreationVGAMReq.PlayerInfo
	(*OrderCreationVATPReq_PlayerInfo)(nil),     // 32: order.OrderCreationVATPReq.PlayerInfo
	nil,                                         // 33: order.OrderHealthResp.ServiceMapEntry
}
var file_order_orderCreate_proto_depIdxs = []int32{
	1,  // 0: order.OrderCreationPolypayReq.TransactionType:type_name -> order.TransactionType
	0,  // 1: order.OrderCreationPolypayReq.PaymentType:type_name -> order.PaymentType
	3,  // 2: order.OrderCreationPolypayReq.MerchantInfo:type_name -> order.KbcMerchantInfo
	25, // 3: order.OrderCreationPolypayReq.Info:type_name -> order.OrderCreationPolypayReq.PlayerInfo
	1,  // 4: order.OrderCreationShan3Req.TransactionType:type_name -> order.TransactionType
	0,  // 5: order.OrderCreationShan3Req.PaymentType:type_name -> order.PaymentType
	3,  // 6: order.OrderCreationShan3Req.MerchantInfo:type_name -> order.KbcMerchantInfo
	26, // 7: order.OrderCreationShan3Req.Info:type_name -> order.OrderCreationShan3Req.PlayerInfo
	1,  // 8: order.OrderCreationShan6Req.TransactionType:type_name -> order.TransactionType
	0,  // 9: order.OrderCreationShan6Req.PaymentType:type_name -> order.PaymentType
	3,  // 10: order.OrderCreationShan6Req.MerchantInfo:type_name -> order.KbcMerchantInfo
	27, // 11: order.OrderCreationShan6Req.Info:type_name -> order.OrderCreationShan6Req.PlayerInfo
	1,  // 12: order.OrderCreationBeiming1Req.TransactionType:type_name -> order.TransactionType
	0,  // 13: order.OrderCreationBeiming1Req.PaymentType:type_name -> order.PaymentType
	3,  // 14: order.OrderCreationBeiming1Req.MerchantInfo:type_name -> order.KbcMerchantInfo
	28, // 15: order.OrderCreationBeiming1Req.Info:type_name -> order.OrderCreationBeiming1Req.PlayerInfo
	1,  // 16: order.OrderCreationBeiming2Req.TransactionType:type_name -> order.TransactionType
	0,  // 17: order.OrderCreationBeiming2Req.PaymentType:type_name -> order.PaymentType
	3,  // 18: order.OrderCreationBeiming2Req.MerchantInfo:type_name -> order.KbcMerchantInfo
	29, // 19: order.OrderCreationBeiming2Req.Info:type_name -> order.OrderCreationBeiming2Req.PlayerInfo
	1,  // 20: order.OrderCreationBankcardReq.TransactionType:type_name -> order.TransactionType
	0,  // 21: order.OrderCreationBankcardReq.PaymentType:type_name -> order.PaymentType
	3,  // 22: order.OrderCreationBankcardReq.MerchantInfo:type_name -> order.KbcMerchantInfo
	30, // 23: order.OrderCreationBankcardReq.Info:type_name -> order.OrderCreationBankcardReq.PlayerInfo
	1,  // 24: order.OrderCreationVGAMReq.TransactionType:type_name -> order.TransactionType
	0,  // 25: order.OrderCreationVGAMReq.PaymentType:type_name -> order.PaymentType
	3,  // 26: order.OrderCreationVGAMReq.MerchantInfo:type_name -> order.KbcMerchantInfo
	31, // 27: order.OrderCreationVGAMReq.Info:type_name -> order.OrderCreationVGAMReq.PlayerInfo
	1,  // 28: order.OrderCreationVATPReq.TransactionType:type_name -> order.TransactionType
	0,  // 29: order.OrderCreationVATPReq.PaymentType:type_name -> order.PaymentType
	3,  // 30: order.OrderCreationVATPReq.MerchantInfo:type_name -> order.KbcMerchantInfo
	32, // 31: order.OrderCreationVATPReq.Info:type_name -> order.OrderCreationVATPReq.PlayerInfo
	33, // 32: order.OrderHealthResp.ServiceMap:type_name -> order.OrderHealthResp.ServiceMapEntry
	3,  // 33: order.OrderCreationReq.MerchantInfo:type_name -> order.KbcMerchantInfo
	1,  // 34: order.OrderCreationReq.TransactionType:type_name -> order.TransactionType
	0,  // 35: order.OrderCreationReq.PaymentType:type_name -> order.PaymentType
	21, // 36: order.OrderCreationReq.PlayerInfo:type_name -> order.PlayerInfo
	3,  // 37: order.DepositOrderCreationReq.MerchantInfo:type_name -> order.KbcMerchantInfo
	1,  // 38: order.DepositOrderCreationReq.TransactionType:type_name -> order.TransactionType
	0,  // 39: order.DepositOrderCreationReq.PaymentType:type_name -> order.PaymentType
	24, // 40: order.DepositOrderCreationReq.PaymentInfo:type_name -> order.DepositPaymentInfo
	21, // 41: order.DepositOrderCreationReq.PlayerInfo:type_name -> order.PlayerInfo
	2,  // 42: order.OrderCreationPolypayReq.PlayerInfo.BaseInfo:type_name -> order.UserBaseInfo
	2,  // 43: order.OrderCreationShan3Req.PlayerInfo.BaseInfo:type_name -> order.UserBaseInfo
	2,  // 44: order.OrderCreationShan6Req.PlayerInfo.BaseInfo:type_name -> order.UserBaseInfo
	2,  // 45: order.OrderCreationBeiming1Req.PlayerInfo.BaseInfo:type_name -> order.UserBaseInfo
	2,  // 46: order.OrderCreationBeiming2Req.PlayerInfo.BaseInfo:type_name -> order.UserBaseInfo
	2,  // 47: order.OrderCreationBankcardReq.PlayerInfo.BaseInfo:type_name -> order.UserBaseInfo
	4,  // 48: order.OrderCreateService.OrderCreationPolypay:input_type -> order.OrderCreationPolypayReq
	6,  // 49: order.OrderCreateService.OrderCreationShan3:input_type -> order.OrderCreationShan3Req
	8,  // 50: order.OrderCreateService.OrderCreationShan6:input_type -> order.OrderCreationShan6Req
	10, // 51: order.OrderCreateService.OrderCreationBeiming1:input_type -> order.OrderCreationBeiming1Req
	12, // 52: order.OrderCreateService.OrderCreationBeiming2:input_type -> order.OrderCreationBeiming2Req
	16, // 53: order.OrderCreateService.OrderCreationVATP:input_type -> order.OrderCreationVATPReq
	20, // 54: order.OrderCreateService.OrderCreation:input_type -> order.OrderCreationReq
	18, // 55: order.OrderCreateService.OrderHealth:input_type -> order.OrderHealthReq
	5,  // 56: order.OrderCreateService.OrderCreationPolypay:output_type -> order.OrderCreationPolypayResp
	7,  // 57: order.OrderCreateService.OrderCreationShan3:output_type -> order.OrderCreationShan3Resp
	9,  // 58: order.OrderCreateService.OrderCreationShan6:output_type -> order.OrderCreationShan6Resp
	11, // 59: order.OrderCreateService.OrderCreationBeiming1:output_type -> order.OrderCreationBeiming1Resp
	13, // 60: order.OrderCreateService.OrderCreationBeiming2:output_type -> order.OrderCreationBeiming2Resp
	17, // 61: order.OrderCreateService.OrderCreationVATP:output_type -> order.OrderCreationVATPResp
	22, // 62: order.OrderCreateService.OrderCreation:output_type -> order.OrderCreationResp
	19, // 63: order.OrderCreateService.OrderHealth:output_type -> order.OrderHealthResp
	56, // [56:64] is the sub-list for method output_type
	48, // [48:56] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_order_orderCreate_proto_init() }
func file_order_orderCreate_proto_init() {
	if File_order_orderCreate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_orderCreate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KbcMerchantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationPolypayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationPolypayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationShan3Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationShan3Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationShan6Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationShan6Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBeiming1Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBeiming1Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBeiming2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBeiming2Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBankcardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationVGAMReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationVATPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationVATPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderHealthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderHealthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositOrderCreationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositPaymentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationPolypayReq_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationShan3Req_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationShan6Req_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBeiming1Req_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBeiming2Req_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationBankcardReq_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationVGAMReq_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderCreate_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreationVATPReq_PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_orderCreate_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_orderCreate_proto_goTypes,
		DependencyIndexes: file_order_orderCreate_proto_depIdxs,
		EnumInfos:         file_order_orderCreate_proto_enumTypes,
		MessageInfos:      file_order_orderCreate_proto_msgTypes,
	}.Build()
	File_order_orderCreate_proto = out.File
	file_order_orderCreate_proto_rawDesc = nil
	file_order_orderCreate_proto_goTypes = nil
	file_order_orderCreate_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderCreateServiceClient is the client API for OrderCreateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderCreateServiceClient interface {
	// 建立訂單
	// 聚合支付 僅打款
	OrderCreationPolypay(ctx context.Context, in *OrderCreationPolypayReq, opts ...grpc.CallOption) (*OrderCreationPolypayResp, error)
	// 閃3 僅打款
	OrderCreationShan3(ctx context.Context, in *OrderCreationShan3Req, opts ...grpc.CallOption) (*OrderCreationShan3Resp, error)
	// 閃6 僅打款 alipay only
	OrderCreationShan6(ctx context.Context, in *OrderCreationShan6Req, opts ...grpc.CallOption) (*OrderCreationShan6Resp, error)
	// 北冥1 僅打款
	OrderCreationBeiming1(ctx context.Context, in *OrderCreationBeiming1Req, opts ...grpc.CallOption) (*OrderCreationBeiming1Resp, error)
	// 北冥2 僅打款
	OrderCreationBeiming2(ctx context.Context, in *OrderCreationBeiming2Req, opts ...grpc.CallOption) (*OrderCreationBeiming2Resp, error)
	// VATP 僅打款
	OrderCreationVATP(ctx context.Context, in *OrderCreationVATPReq, opts ...grpc.CallOption) (*OrderCreationVATPResp, error)
	OrderCreation(ctx context.Context, in *OrderCreationReq, opts ...grpc.CallOption) (*OrderCreationResp, error)
	//  訂單服務器健康確認
	OrderHealth(ctx context.Context, in *OrderHealthReq, opts ...grpc.CallOption) (*OrderHealthResp, error)
}

type orderCreateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderCreateServiceClient(cc grpc.ClientConnInterface) OrderCreateServiceClient {
	return &orderCreateServiceClient{cc}
}

func (c *orderCreateServiceClient) OrderCreationPolypay(ctx context.Context, in *OrderCreationPolypayReq, opts ...grpc.CallOption) (*OrderCreationPolypayResp, error) {
	out := new(OrderCreationPolypayResp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreationPolypay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderCreationShan3(ctx context.Context, in *OrderCreationShan3Req, opts ...grpc.CallOption) (*OrderCreationShan3Resp, error) {
	out := new(OrderCreationShan3Resp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreationShan3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderCreationShan6(ctx context.Context, in *OrderCreationShan6Req, opts ...grpc.CallOption) (*OrderCreationShan6Resp, error) {
	out := new(OrderCreationShan6Resp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreationShan6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderCreationBeiming1(ctx context.Context, in *OrderCreationBeiming1Req, opts ...grpc.CallOption) (*OrderCreationBeiming1Resp, error) {
	out := new(OrderCreationBeiming1Resp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreationBeiming1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderCreationBeiming2(ctx context.Context, in *OrderCreationBeiming2Req, opts ...grpc.CallOption) (*OrderCreationBeiming2Resp, error) {
	out := new(OrderCreationBeiming2Resp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreationBeiming2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderCreationVATP(ctx context.Context, in *OrderCreationVATPReq, opts ...grpc.CallOption) (*OrderCreationVATPResp, error) {
	out := new(OrderCreationVATPResp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreationVATP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderCreation(ctx context.Context, in *OrderCreationReq, opts ...grpc.CallOption) (*OrderCreationResp, error) {
	out := new(OrderCreationResp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderCreation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderCreateServiceClient) OrderHealth(ctx context.Context, in *OrderHealthReq, opts ...grpc.CallOption) (*OrderHealthResp, error) {
	out := new(OrderHealthResp)
	err := c.cc.Invoke(ctx, "/order.OrderCreateService/OrderHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderCreateServiceServer is the server API for OrderCreateService service.
type OrderCreateServiceServer interface {
	// 建立訂單
	// 聚合支付 僅打款
	OrderCreationPolypay(context.Context, *OrderCreationPolypayReq) (*OrderCreationPolypayResp, error)
	// 閃3 僅打款
	OrderCreationShan3(context.Context, *OrderCreationShan3Req) (*OrderCreationShan3Resp, error)
	// 閃6 僅打款 alipay only
	OrderCreationShan6(context.Context, *OrderCreationShan6Req) (*OrderCreationShan6Resp, error)
	// 北冥1 僅打款
	OrderCreationBeiming1(context.Context, *OrderCreationBeiming1Req) (*OrderCreationBeiming1Resp, error)
	// 北冥2 僅打款
	OrderCreationBeiming2(context.Context, *OrderCreationBeiming2Req) (*OrderCreationBeiming2Resp, error)
	// VATP 僅打款
	OrderCreationVATP(context.Context, *OrderCreationVATPReq) (*OrderCreationVATPResp, error)
	OrderCreation(context.Context, *OrderCreationReq) (*OrderCreationResp, error)
	//  訂單服務器健康確認
	OrderHealth(context.Context, *OrderHealthReq) (*OrderHealthResp, error)
}

// UnimplementedOrderCreateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderCreateServiceServer struct {
}

func (*UnimplementedOrderCreateServiceServer) OrderCreationPolypay(context.Context, *OrderCreationPolypayReq) (*OrderCreationPolypayResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreationPolypay not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderCreationShan3(context.Context, *OrderCreationShan3Req) (*OrderCreationShan3Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreationShan3 not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderCreationShan6(context.Context, *OrderCreationShan6Req) (*OrderCreationShan6Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreationShan6 not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderCreationBeiming1(context.Context, *OrderCreationBeiming1Req) (*OrderCreationBeiming1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreationBeiming1 not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderCreationBeiming2(context.Context, *OrderCreationBeiming2Req) (*OrderCreationBeiming2Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreationBeiming2 not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderCreationVATP(context.Context, *OrderCreationVATPReq) (*OrderCreationVATPResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreationVATP not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderCreation(context.Context, *OrderCreationReq) (*OrderCreationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCreation not implemented")
}
func (*UnimplementedOrderCreateServiceServer) OrderHealth(context.Context, *OrderHealthReq) (*OrderHealthResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderHealth not implemented")
}

func RegisterOrderCreateServiceServer(s *grpc.Server, srv OrderCreateServiceServer) {
	s.RegisterService(&_OrderCreateService_serviceDesc, srv)
}

func _OrderCreateService_OrderCreationPolypay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationPolypayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreationPolypay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreationPolypay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreationPolypay(ctx, req.(*OrderCreationPolypayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderCreationShan3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationShan3Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreationShan3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreationShan3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreationShan3(ctx, req.(*OrderCreationShan3Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderCreationShan6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationShan6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreationShan6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreationShan6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreationShan6(ctx, req.(*OrderCreationShan6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderCreationBeiming1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationBeiming1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreationBeiming1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreationBeiming1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreationBeiming1(ctx, req.(*OrderCreationBeiming1Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderCreationBeiming2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationBeiming2Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreationBeiming2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreationBeiming2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreationBeiming2(ctx, req.(*OrderCreationBeiming2Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderCreationVATP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationVATPReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreationVATP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreationVATP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreationVATP(ctx, req.(*OrderCreationVATPReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderCreation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderCreation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderCreation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderCreation(ctx, req.(*OrderCreationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderCreateService_OrderHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderHealthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderCreateServiceServer).OrderHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderCreateService/OrderHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderCreateServiceServer).OrderHealth(ctx, req.(*OrderHealthReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderCreateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.OrderCreateService",
	HandlerType: (*OrderCreateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OrderCreationPolypay",
			Handler:    _OrderCreateService_OrderCreationPolypay_Handler,
		},
		{
			MethodName: "OrderCreationShan3",
			Handler:    _OrderCreateService_OrderCreationShan3_Handler,
		},
		{
			MethodName: "OrderCreationShan6",
			Handler:    _OrderCreateService_OrderCreationShan6_Handler,
		},
		{
			MethodName: "OrderCreationBeiming1",
			Handler:    _OrderCreateService_OrderCreationBeiming1_Handler,
		},
		{
			MethodName: "OrderCreationBeiming2",
			Handler:    _OrderCreateService_OrderCreationBeiming2_Handler,
		},
		{
			MethodName: "OrderCreationVATP",
			Handler:    _OrderCreateService_OrderCreationVATP_Handler,
		},
		{
			MethodName: "OrderCreation",
			Handler:    _OrderCreateService_OrderCreation_Handler,
		},
		{
			MethodName: "OrderHealth",
			Handler:    _OrderCreateService_OrderHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order/orderCreate.proto",
}
