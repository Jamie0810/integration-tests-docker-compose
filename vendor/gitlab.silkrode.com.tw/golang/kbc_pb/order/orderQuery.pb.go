// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: order/orderQuery.proto

package order

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PolypayQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *PolypayQueryReq) Reset() {
	*x = PolypayQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayQueryReq) ProtoMessage() {}

func (x *PolypayQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayQueryReq.ProtoReflect.Descriptor instead.
func (*PolypayQueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{0}
}

func (x *PolypayQueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *PolypayQueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *PolypayQueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type PolypayQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *PolypayQueryResp) Reset() {
	*x = PolypayQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayQueryResp) ProtoMessage() {}

func (x *PolypayQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayQueryResp.ProtoReflect.Descriptor instead.
func (*PolypayQueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{1}
}

func (x *PolypayQueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type PolypayQueryOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID uint64 `protobuf:"varint,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	OrderID    string `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
}

func (x *PolypayQueryOrderReq) Reset() {
	*x = PolypayQueryOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayQueryOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayQueryOrderReq) ProtoMessage() {}

func (x *PolypayQueryOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayQueryOrderReq.ProtoReflect.Descriptor instead.
func (*PolypayQueryOrderReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{2}
}

func (x *PolypayQueryOrderReq) GetMerchantID() uint64 {
	if x != nil {
		return x.MerchantID
	}
	return 0
}

func (x *PolypayQueryOrderReq) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

type PolypayQueryOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID    string `protobuf:"bytes,1,opt,name=MerchantID,json=mid,proto3" json:"MerchantID,omitempty"`
	TradeID       string `protobuf:"bytes,2,opt,name=TradeID,json=merchant_trade_id,proto3" json:"TradeID,omitempty"`
	Payment       string `protobuf:"bytes,3,opt,name=Payment,json=payment,proto3" json:"Payment,omitempty"`
	TradeAmount   string `protobuf:"bytes,4,opt,name=TradeAmount,json=trade_amount,proto3" json:"TradeAmount,omitempty"`
	ReceiptAmount string `protobuf:"bytes,5,opt,name=ReceiptAmount,json=receipt_amount,proto3" json:"ReceiptAmount,omitempty"`
	CallbackURL   string `protobuf:"bytes,6,opt,name=CallbackURL,json=callback_url,proto3" json:"CallbackURL,omitempty"`
	PayTime       string `protobuf:"bytes,7,opt,name=PayTime,json=pay_time,proto3" json:"PayTime,omitempty"`
	Username      string `protobuf:"bytes,8,opt,name=Username,json=username,proto3" json:"Username,omitempty"`
	Player        string `protobuf:"bytes,9,opt,name=Player,json=player,proto3" json:"Player,omitempty"`
	PayAccount    string `protobuf:"bytes,10,opt,name=PayAccount,json=pay_account,proto3" json:"PayAccount,omitempty"`
	DeviceIP      string `protobuf:"bytes,11,opt,name=DeviceIP,json=device_ip,proto3" json:"DeviceIP,omitempty"`
	DeviceID      string `protobuf:"bytes,12,opt,name=DeviceID,json=device_id,proto3" json:"DeviceID,omitempty"`
	DeviceType    string `protobuf:"bytes,13,opt,name=DeviceType,json=device_type,proto3" json:"DeviceType,omitempty"`
	Telephone     string `protobuf:"bytes,14,opt,name=Telephone,json=telephone,proto3" json:"Telephone,omitempty"`
	Status        uint64 `protobuf:"varint,15,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	Fee           string `protobuf:"bytes,16,opt,name=Fee,json=fee,proto3" json:"Fee,omitempty"`
	FeeRate       string `protobuf:"bytes,17,opt,name=FeeRate,json=fee_rate,proto3" json:"FeeRate,omitempty"`
}

func (x *PolypayQueryOrderResp) Reset() {
	*x = PolypayQueryOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayQueryOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayQueryOrderResp) ProtoMessage() {}

func (x *PolypayQueryOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayQueryOrderResp.ProtoReflect.Descriptor instead.
func (*PolypayQueryOrderResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{3}
}

func (x *PolypayQueryOrderResp) GetMerchantID() string {
	if x != nil {
		return x.MerchantID
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetTradeID() string {
	if x != nil {
		return x.TradeID
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetPayment() string {
	if x != nil {
		return x.Payment
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetTradeAmount() string {
	if x != nil {
		return x.TradeAmount
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetReceiptAmount() string {
	if x != nil {
		return x.ReceiptAmount
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetCallbackURL() string {
	if x != nil {
		return x.CallbackURL
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetPayTime() string {
	if x != nil {
		return x.PayTime
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetDeviceIP() string {
	if x != nil {
		return x.DeviceIP
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PolypayQueryOrderResp) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *PolypayQueryOrderResp) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

type PolypayGetPeriodCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID uint64 `protobuf:"varint,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	StartDate  string `protobuf:"bytes,2,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate    string `protobuf:"bytes,3,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
}

func (x *PolypayGetPeriodCountReq) Reset() {
	*x = PolypayGetPeriodCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayGetPeriodCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayGetPeriodCountReq) ProtoMessage() {}

func (x *PolypayGetPeriodCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayGetPeriodCountReq.ProtoReflect.Descriptor instead.
func (*PolypayGetPeriodCountReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{4}
}

func (x *PolypayGetPeriodCountReq) GetMerchantID() uint64 {
	if x != nil {
		return x.MerchantID
	}
	return 0
}

func (x *PolypayGetPeriodCountReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PolypayGetPeriodCountReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type PolypayGetMonthCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID uint64 `protobuf:"varint,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	Date       string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *PolypayGetMonthCountReq) Reset() {
	*x = PolypayGetMonthCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayGetMonthCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayGetMonthCountReq) ProtoMessage() {}

func (x *PolypayGetMonthCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayGetMonthCountReq.ProtoReflect.Descriptor instead.
func (*PolypayGetMonthCountReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{5}
}

func (x *PolypayGetMonthCountReq) GetMerchantID() uint64 {
	if x != nil {
		return x.MerchantID
	}
	return 0
}

func (x *PolypayGetMonthCountReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type PolypayGetDailyCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID uint64 `protobuf:"varint,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	Date       string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *PolypayGetDailyCountReq) Reset() {
	*x = PolypayGetDailyCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayGetDailyCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayGetDailyCountReq) ProtoMessage() {}

func (x *PolypayGetDailyCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayGetDailyCountReq.ProtoReflect.Descriptor instead.
func (*PolypayGetDailyCountReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{6}
}

func (x *PolypayGetDailyCountReq) GetMerchantID() uint64 {
	if x != nil {
		return x.MerchantID
	}
	return 0
}

func (x *PolypayGetDailyCountReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type PolypayGetCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counts []*PolypayGetCount `protobuf:"bytes,1,rep,name=Counts,json=data,proto3" json:"Counts,omitempty"`
}

func (x *PolypayGetCountResp) Reset() {
	*x = PolypayGetCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayGetCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayGetCountResp) ProtoMessage() {}

func (x *PolypayGetCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayGetCountResp.ProtoReflect.Descriptor instead.
func (*PolypayGetCountResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{7}
}

func (x *PolypayGetCountResp) GetCounts() []*PolypayGetCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type PolypayGetCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantID string `protobuf:"bytes,1,opt,name=MerchantID,json=mid,proto3" json:"MerchantID,omitempty"`
	Day        string `protobuf:"bytes,2,opt,name=Day,json=day,proto3" json:"Day,omitempty"`
	DayTotal   string `protobuf:"bytes,3,opt,name=DayTotal,json=day_total,proto3" json:"DayTotal,omitempty"`
	UpdatedAt  string `protobuf:"bytes,4,opt,name=UpdatedAt,json=updated_at,proto3" json:"UpdatedAt,omitempty"`
}

func (x *PolypayGetCount) Reset() {
	*x = PolypayGetCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolypayGetCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolypayGetCount) ProtoMessage() {}

func (x *PolypayGetCount) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolypayGetCount.ProtoReflect.Descriptor instead.
func (*PolypayGetCount) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{8}
}

func (x *PolypayGetCount) GetMerchantID() string {
	if x != nil {
		return x.MerchantID
	}
	return ""
}

func (x *PolypayGetCount) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *PolypayGetCount) GetDayTotal() string {
	if x != nil {
		return x.DayTotal
	}
	return ""
}

func (x *PolypayGetCount) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Shan3QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *Shan3QueryReq) Reset() {
	*x = Shan3QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shan3QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shan3QueryReq) ProtoMessage() {}

func (x *Shan3QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shan3QueryReq.ProtoReflect.Descriptor instead.
func (*Shan3QueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{9}
}

func (x *Shan3QueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *Shan3QueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *Shan3QueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type Shan3QueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *Shan3QueryResp) Reset() {
	*x = Shan3QueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shan3QueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shan3QueryResp) ProtoMessage() {}

func (x *Shan3QueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shan3QueryResp.ProtoReflect.Descriptor instead.
func (*Shan3QueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{10}
}

func (x *Shan3QueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type Shan6QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *Shan6QueryReq) Reset() {
	*x = Shan6QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shan6QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shan6QueryReq) ProtoMessage() {}

func (x *Shan6QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shan6QueryReq.ProtoReflect.Descriptor instead.
func (*Shan6QueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{11}
}

func (x *Shan6QueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *Shan6QueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *Shan6QueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type Shan6QueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *Shan6QueryResp) Reset() {
	*x = Shan6QueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shan6QueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shan6QueryResp) ProtoMessage() {}

func (x *Shan6QueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shan6QueryResp.ProtoReflect.Descriptor instead.
func (*Shan6QueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{12}
}

func (x *Shan6QueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type BankcardQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *BankcardQueryReq) Reset() {
	*x = BankcardQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankcardQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankcardQueryReq) ProtoMessage() {}

func (x *BankcardQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankcardQueryReq.ProtoReflect.Descriptor instead.
func (*BankcardQueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{13}
}

func (x *BankcardQueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *BankcardQueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *BankcardQueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type BankcardQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *BankcardQueryResp) Reset() {
	*x = BankcardQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankcardQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankcardQueryResp) ProtoMessage() {}

func (x *BankcardQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankcardQueryResp.ProtoReflect.Descriptor instead.
func (*BankcardQueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{14}
}

func (x *BankcardQueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type Beiming1QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *Beiming1QueryReq) Reset() {
	*x = Beiming1QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beiming1QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beiming1QueryReq) ProtoMessage() {}

func (x *Beiming1QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beiming1QueryReq.ProtoReflect.Descriptor instead.
func (*Beiming1QueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{15}
}

func (x *Beiming1QueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *Beiming1QueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *Beiming1QueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type Beiming1QueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *Beiming1QueryResp) Reset() {
	*x = Beiming1QueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beiming1QueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beiming1QueryResp) ProtoMessage() {}

func (x *Beiming1QueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beiming1QueryResp.ProtoReflect.Descriptor instead.
func (*Beiming1QueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{16}
}

func (x *Beiming1QueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type Beiming2QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *Beiming2QueryReq) Reset() {
	*x = Beiming2QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beiming2QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beiming2QueryReq) ProtoMessage() {}

func (x *Beiming2QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beiming2QueryReq.ProtoReflect.Descriptor instead.
func (*Beiming2QueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{17}
}

func (x *Beiming2QueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *Beiming2QueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *Beiming2QueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type Beiming2QueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *Beiming2QueryResp) Reset() {
	*x = Beiming2QueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beiming2QueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beiming2QueryResp) ProtoMessage() {}

func (x *Beiming2QueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beiming2QueryResp.ProtoReflect.Descriptor instead.
func (*Beiming2QueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{18}
}

func (x *Beiming2QueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type ExchangeQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []byte `protobuf:"bytes,1,opt,name=RequestBody,proto3" json:"RequestBody,omitempty"`
	RawQuery    string `protobuf:"bytes,2,opt,name=RawQuery,proto3" json:"RawQuery,omitempty"`
	APIPath     string `protobuf:"bytes,3,opt,name=APIPath,proto3" json:"APIPath,omitempty"`
}

func (x *ExchangeQueryReq) Reset() {
	*x = ExchangeQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeQueryReq) ProtoMessage() {}

func (x *ExchangeQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeQueryReq.ProtoReflect.Descriptor instead.
func (*ExchangeQueryReq) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{19}
}

func (x *ExchangeQueryReq) GetRequestBody() []byte {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *ExchangeQueryReq) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *ExchangeQueryReq) GetAPIPath() string {
	if x != nil {
		return x.APIPath
	}
	return ""
}

type ExchangeQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseBody []byte `protobuf:"bytes,1,opt,name=ResponseBody,proto3" json:"ResponseBody,omitempty"`
}

func (x *ExchangeQueryResp) Reset() {
	*x = ExchangeQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_orderQuery_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeQueryResp) ProtoMessage() {}

func (x *ExchangeQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_orderQuery_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeQueryResp.ProtoReflect.Descriptor instead.
func (*ExchangeQueryResp) Descriptor() ([]byte, []int) {
	return file_order_orderQuery_proto_rawDescGZIP(), []int{20}
}

func (x *ExchangeQueryResp) GetResponseBody() []byte {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

var File_order_orderQuery_proto protoreflect.FileDescriptor

var file_order_orderQuery_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x69, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x22, 0x36, 0x0a, 0x10, 0x50, 0x6f,
	0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x50, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x89, 0x04, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17,
	0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x12,
	0x1b, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x22, 0x72, 0x0a, 0x18, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x17, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x17, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x79, 0x70,
	0x61, 0x79, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x0a, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x08, 0x44, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x67, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x6e, 0x33, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x0e, 0x53, 0x68,
	0x61, 0x6e, 0x33, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x22, 0x67, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x0e, 0x53, 0x68, 0x61,
	0x6e, 0x36, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x22,
	0x6a, 0x0a, 0x10, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x11, 0x42,
	0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x6a, 0x0a, 0x10, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61,
	0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61,
	0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x37, 0x0a, 0x11, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x6a, 0x0a, 0x10, 0x42, 0x65, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x32, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x50,
	0x49, 0x50, 0x61, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x11, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x32, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x6a,
	0x0a, 0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x50, 0x49, 0x50, 0x61, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x11, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x32, 0xb7, 0x06, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x41, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70,
	0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x79, 0x70,
	0x61, 0x79, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61,
	0x79, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x54, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x61, 0x79, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x53,
	0x68, 0x61, 0x6e, 0x33, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x33, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x33, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x6e,
	0x36, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53,
	0x68, 0x61, 0x6e, 0x36, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x36, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42,
	0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x42,
	0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x65,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x31, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x0d, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x32, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x32, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x32, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_orderQuery_proto_rawDescOnce sync.Once
	file_order_orderQuery_proto_rawDescData = file_order_orderQuery_proto_rawDesc
)

func file_order_orderQuery_proto_rawDescGZIP() []byte {
	file_order_orderQuery_proto_rawDescOnce.Do(func() {
		file_order_orderQuery_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_orderQuery_proto_rawDescData)
	})
	return file_order_orderQuery_proto_rawDescData
}

var file_order_orderQuery_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_order_orderQuery_proto_goTypes = []interface{}{
	(*PolypayQueryReq)(nil),          // 0: order.PolypayQueryReq
	(*PolypayQueryResp)(nil),         // 1: order.PolypayQueryResp
	(*PolypayQueryOrderReq)(nil),     // 2: order.PolypayQueryOrderReq
	(*PolypayQueryOrderResp)(nil),    // 3: order.PolypayQueryOrderResp
	(*PolypayGetPeriodCountReq)(nil), // 4: order.PolypayGetPeriodCountReq
	(*PolypayGetMonthCountReq)(nil),  // 5: order.PolypayGetMonthCountReq
	(*PolypayGetDailyCountReq)(nil),  // 6: order.PolypayGetDailyCountReq
	(*PolypayGetCountResp)(nil),      // 7: order.PolypayGetCountResp
	(*PolypayGetCount)(nil),          // 8: order.PolypayGetCount
	(*Shan3QueryReq)(nil),            // 9: order.Shan3QueryReq
	(*Shan3QueryResp)(nil),           // 10: order.Shan3QueryResp
	(*Shan6QueryReq)(nil),            // 11: order.Shan6QueryReq
	(*Shan6QueryResp)(nil),           // 12: order.Shan6QueryResp
	(*BankcardQueryReq)(nil),         // 13: order.BankcardQueryReq
	(*BankcardQueryResp)(nil),        // 14: order.BankcardQueryResp
	(*Beiming1QueryReq)(nil),         // 15: order.Beiming1QueryReq
	(*Beiming1QueryResp)(nil),        // 16: order.Beiming1QueryResp
	(*Beiming2QueryReq)(nil),         // 17: order.Beiming2QueryReq
	(*Beiming2QueryResp)(nil),        // 18: order.Beiming2QueryResp
	(*ExchangeQueryReq)(nil),         // 19: order.ExchangeQueryReq
	(*ExchangeQueryResp)(nil),        // 20: order.ExchangeQueryResp
}
var file_order_orderQuery_proto_depIdxs = []int32{
	8,  // 0: order.PolypayGetCountResp.Counts:type_name -> order.PolypayGetCount
	0,  // 1: order.OrderQuery.PolypayQuery:input_type -> order.PolypayQueryReq
	2,  // 2: order.OrderQuery.PolypayQueryOrder:input_type -> order.PolypayQueryOrderReq
	4,  // 3: order.OrderQuery.PolypayGetPeriodCount:input_type -> order.PolypayGetPeriodCountReq
	5,  // 4: order.OrderQuery.PolypayGetMonthCount:input_type -> order.PolypayGetMonthCountReq
	6,  // 5: order.OrderQuery.PolypayGetDailyCount:input_type -> order.PolypayGetDailyCountReq
	9,  // 6: order.OrderQuery.Shan3Query:input_type -> order.Shan3QueryReq
	11, // 7: order.OrderQuery.Shan6Query:input_type -> order.Shan6QueryReq
	13, // 8: order.OrderQuery.BankcardQuery:input_type -> order.BankcardQueryReq
	15, // 9: order.OrderQuery.Beiming1Query:input_type -> order.Beiming1QueryReq
	17, // 10: order.OrderQuery.Beiming2Query:input_type -> order.Beiming2QueryReq
	19, // 11: order.OrderQuery.ExchangeQuery:input_type -> order.ExchangeQueryReq
	1,  // 12: order.OrderQuery.PolypayQuery:output_type -> order.PolypayQueryResp
	3,  // 13: order.OrderQuery.PolypayQueryOrder:output_type -> order.PolypayQueryOrderResp
	7,  // 14: order.OrderQuery.PolypayGetPeriodCount:output_type -> order.PolypayGetCountResp
	7,  // 15: order.OrderQuery.PolypayGetMonthCount:output_type -> order.PolypayGetCountResp
	7,  // 16: order.OrderQuery.PolypayGetDailyCount:output_type -> order.PolypayGetCountResp
	10, // 17: order.OrderQuery.Shan3Query:output_type -> order.Shan3QueryResp
	12, // 18: order.OrderQuery.Shan6Query:output_type -> order.Shan6QueryResp
	14, // 19: order.OrderQuery.BankcardQuery:output_type -> order.BankcardQueryResp
	16, // 20: order.OrderQuery.Beiming1Query:output_type -> order.Beiming1QueryResp
	18, // 21: order.OrderQuery.Beiming2Query:output_type -> order.Beiming2QueryResp
	20, // 22: order.OrderQuery.ExchangeQuery:output_type -> order.ExchangeQueryResp
	12, // [12:23] is the sub-list for method output_type
	1,  // [1:12] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_order_orderQuery_proto_init() }
func file_order_orderQuery_proto_init() {
	if File_order_orderQuery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_orderQuery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayQueryOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayQueryOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayGetPeriodCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayGetMonthCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayGetDailyCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayGetCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolypayGetCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shan3QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shan3QueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shan6QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shan6QueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankcardQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankcardQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beiming1QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beiming1QueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beiming2QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beiming2QueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_orderQuery_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_orderQuery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_orderQuery_proto_goTypes,
		DependencyIndexes: file_order_orderQuery_proto_depIdxs,
		MessageInfos:      file_order_orderQuery_proto_msgTypes,
	}.Build()
	File_order_orderQuery_proto = out.File
	file_order_orderQuery_proto_rawDesc = nil
	file_order_orderQuery_proto_goTypes = nil
	file_order_orderQuery_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderQueryClient is the client API for OrderQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderQueryClient interface {
	// 聚合支付
	PolypayQuery(ctx context.Context, in *PolypayQueryReq, opts ...grpc.CallOption) (*PolypayQueryResp, error)
	PolypayQueryOrder(ctx context.Context, in *PolypayQueryOrderReq, opts ...grpc.CallOption) (*PolypayQueryOrderResp, error)
	PolypayGetPeriodCount(ctx context.Context, in *PolypayGetPeriodCountReq, opts ...grpc.CallOption) (*PolypayGetCountResp, error)
	PolypayGetMonthCount(ctx context.Context, in *PolypayGetMonthCountReq, opts ...grpc.CallOption) (*PolypayGetCountResp, error)
	PolypayGetDailyCount(ctx context.Context, in *PolypayGetDailyCountReq, opts ...grpc.CallOption) (*PolypayGetCountResp, error)
	// 閃3
	Shan3Query(ctx context.Context, in *Shan3QueryReq, opts ...grpc.CallOption) (*Shan3QueryResp, error)
	// 閃6
	Shan6Query(ctx context.Context, in *Shan6QueryReq, opts ...grpc.CallOption) (*Shan6QueryResp, error)
	// 銀行卡
	BankcardQuery(ctx context.Context, in *BankcardQueryReq, opts ...grpc.CallOption) (*BankcardQueryResp, error)
	// 北冥1
	Beiming1Query(ctx context.Context, in *Beiming1QueryReq, opts ...grpc.CallOption) (*Beiming1QueryResp, error)
	// 北冥2
	Beiming2Query(ctx context.Context, in *Beiming2QueryReq, opts ...grpc.CallOption) (*Beiming2QueryResp, error)
	// 兌換支付
	ExchangeQuery(ctx context.Context, in *ExchangeQueryReq, opts ...grpc.CallOption) (*ExchangeQueryResp, error)
}

type orderQueryClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderQueryClient(cc grpc.ClientConnInterface) OrderQueryClient {
	return &orderQueryClient{cc}
}

func (c *orderQueryClient) PolypayQuery(ctx context.Context, in *PolypayQueryReq, opts ...grpc.CallOption) (*PolypayQueryResp, error) {
	out := new(PolypayQueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/PolypayQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) PolypayQueryOrder(ctx context.Context, in *PolypayQueryOrderReq, opts ...grpc.CallOption) (*PolypayQueryOrderResp, error) {
	out := new(PolypayQueryOrderResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/PolypayQueryOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) PolypayGetPeriodCount(ctx context.Context, in *PolypayGetPeriodCountReq, opts ...grpc.CallOption) (*PolypayGetCountResp, error) {
	out := new(PolypayGetCountResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/PolypayGetPeriodCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) PolypayGetMonthCount(ctx context.Context, in *PolypayGetMonthCountReq, opts ...grpc.CallOption) (*PolypayGetCountResp, error) {
	out := new(PolypayGetCountResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/PolypayGetMonthCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) PolypayGetDailyCount(ctx context.Context, in *PolypayGetDailyCountReq, opts ...grpc.CallOption) (*PolypayGetCountResp, error) {
	out := new(PolypayGetCountResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/PolypayGetDailyCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) Shan3Query(ctx context.Context, in *Shan3QueryReq, opts ...grpc.CallOption) (*Shan3QueryResp, error) {
	out := new(Shan3QueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/Shan3Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) Shan6Query(ctx context.Context, in *Shan6QueryReq, opts ...grpc.CallOption) (*Shan6QueryResp, error) {
	out := new(Shan6QueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/Shan6Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) BankcardQuery(ctx context.Context, in *BankcardQueryReq, opts ...grpc.CallOption) (*BankcardQueryResp, error) {
	out := new(BankcardQueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/BankcardQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) Beiming1Query(ctx context.Context, in *Beiming1QueryReq, opts ...grpc.CallOption) (*Beiming1QueryResp, error) {
	out := new(Beiming1QueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/Beiming1Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) Beiming2Query(ctx context.Context, in *Beiming2QueryReq, opts ...grpc.CallOption) (*Beiming2QueryResp, error) {
	out := new(Beiming2QueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/Beiming2Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderQueryClient) ExchangeQuery(ctx context.Context, in *ExchangeQueryReq, opts ...grpc.CallOption) (*ExchangeQueryResp, error) {
	out := new(ExchangeQueryResp)
	err := c.cc.Invoke(ctx, "/order.OrderQuery/ExchangeQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderQueryServer is the server API for OrderQuery service.
type OrderQueryServer interface {
	// 聚合支付
	PolypayQuery(context.Context, *PolypayQueryReq) (*PolypayQueryResp, error)
	PolypayQueryOrder(context.Context, *PolypayQueryOrderReq) (*PolypayQueryOrderResp, error)
	PolypayGetPeriodCount(context.Context, *PolypayGetPeriodCountReq) (*PolypayGetCountResp, error)
	PolypayGetMonthCount(context.Context, *PolypayGetMonthCountReq) (*PolypayGetCountResp, error)
	PolypayGetDailyCount(context.Context, *PolypayGetDailyCountReq) (*PolypayGetCountResp, error)
	// 閃3
	Shan3Query(context.Context, *Shan3QueryReq) (*Shan3QueryResp, error)
	// 閃6
	Shan6Query(context.Context, *Shan6QueryReq) (*Shan6QueryResp, error)
	// 銀行卡
	BankcardQuery(context.Context, *BankcardQueryReq) (*BankcardQueryResp, error)
	// 北冥1
	Beiming1Query(context.Context, *Beiming1QueryReq) (*Beiming1QueryResp, error)
	// 北冥2
	Beiming2Query(context.Context, *Beiming2QueryReq) (*Beiming2QueryResp, error)
	// 兌換支付
	ExchangeQuery(context.Context, *ExchangeQueryReq) (*ExchangeQueryResp, error)
}

// UnimplementedOrderQueryServer can be embedded to have forward compatible implementations.
type UnimplementedOrderQueryServer struct {
}

func (*UnimplementedOrderQueryServer) PolypayQuery(context.Context, *PolypayQueryReq) (*PolypayQueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PolypayQuery not implemented")
}
func (*UnimplementedOrderQueryServer) PolypayQueryOrder(context.Context, *PolypayQueryOrderReq) (*PolypayQueryOrderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PolypayQueryOrder not implemented")
}
func (*UnimplementedOrderQueryServer) PolypayGetPeriodCount(context.Context, *PolypayGetPeriodCountReq) (*PolypayGetCountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PolypayGetPeriodCount not implemented")
}
func (*UnimplementedOrderQueryServer) PolypayGetMonthCount(context.Context, *PolypayGetMonthCountReq) (*PolypayGetCountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PolypayGetMonthCount not implemented")
}
func (*UnimplementedOrderQueryServer) PolypayGetDailyCount(context.Context, *PolypayGetDailyCountReq) (*PolypayGetCountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PolypayGetDailyCount not implemented")
}
func (*UnimplementedOrderQueryServer) Shan3Query(context.Context, *Shan3QueryReq) (*Shan3QueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shan3Query not implemented")
}
func (*UnimplementedOrderQueryServer) Shan6Query(context.Context, *Shan6QueryReq) (*Shan6QueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shan6Query not implemented")
}
func (*UnimplementedOrderQueryServer) BankcardQuery(context.Context, *BankcardQueryReq) (*BankcardQueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankcardQuery not implemented")
}
func (*UnimplementedOrderQueryServer) Beiming1Query(context.Context, *Beiming1QueryReq) (*Beiming1QueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Beiming1Query not implemented")
}
func (*UnimplementedOrderQueryServer) Beiming2Query(context.Context, *Beiming2QueryReq) (*Beiming2QueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Beiming2Query not implemented")
}
func (*UnimplementedOrderQueryServer) ExchangeQuery(context.Context, *ExchangeQueryReq) (*ExchangeQueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeQuery not implemented")
}

func RegisterOrderQueryServer(s *grpc.Server, srv OrderQueryServer) {
	s.RegisterService(&_OrderQuery_serviceDesc, srv)
}

func _OrderQuery_PolypayQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PolypayQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).PolypayQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/PolypayQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).PolypayQuery(ctx, req.(*PolypayQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_PolypayQueryOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PolypayQueryOrderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).PolypayQueryOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/PolypayQueryOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).PolypayQueryOrder(ctx, req.(*PolypayQueryOrderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_PolypayGetPeriodCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PolypayGetPeriodCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).PolypayGetPeriodCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/PolypayGetPeriodCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).PolypayGetPeriodCount(ctx, req.(*PolypayGetPeriodCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_PolypayGetMonthCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PolypayGetMonthCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).PolypayGetMonthCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/PolypayGetMonthCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).PolypayGetMonthCount(ctx, req.(*PolypayGetMonthCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_PolypayGetDailyCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PolypayGetDailyCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).PolypayGetDailyCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/PolypayGetDailyCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).PolypayGetDailyCount(ctx, req.(*PolypayGetDailyCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_Shan3Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shan3QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).Shan3Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/Shan3Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).Shan3Query(ctx, req.(*Shan3QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_Shan6Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shan6QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).Shan6Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/Shan6Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).Shan6Query(ctx, req.(*Shan6QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_BankcardQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankcardQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).BankcardQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/BankcardQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).BankcardQuery(ctx, req.(*BankcardQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_Beiming1Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Beiming1QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).Beiming1Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/Beiming1Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).Beiming1Query(ctx, req.(*Beiming1QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_Beiming2Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Beiming2QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).Beiming2Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/Beiming2Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).Beiming2Query(ctx, req.(*Beiming2QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderQuery_ExchangeQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderQueryServer).ExchangeQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderQuery/ExchangeQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderQueryServer).ExchangeQuery(ctx, req.(*ExchangeQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.OrderQuery",
	HandlerType: (*OrderQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PolypayQuery",
			Handler:    _OrderQuery_PolypayQuery_Handler,
		},
		{
			MethodName: "PolypayQueryOrder",
			Handler:    _OrderQuery_PolypayQueryOrder_Handler,
		},
		{
			MethodName: "PolypayGetPeriodCount",
			Handler:    _OrderQuery_PolypayGetPeriodCount_Handler,
		},
		{
			MethodName: "PolypayGetMonthCount",
			Handler:    _OrderQuery_PolypayGetMonthCount_Handler,
		},
		{
			MethodName: "PolypayGetDailyCount",
			Handler:    _OrderQuery_PolypayGetDailyCount_Handler,
		},
		{
			MethodName: "Shan3Query",
			Handler:    _OrderQuery_Shan3Query_Handler,
		},
		{
			MethodName: "Shan6Query",
			Handler:    _OrderQuery_Shan6Query_Handler,
		},
		{
			MethodName: "BankcardQuery",
			Handler:    _OrderQuery_BankcardQuery_Handler,
		},
		{
			MethodName: "Beiming1Query",
			Handler:    _OrderQuery_Beiming1Query_Handler,
		},
		{
			MethodName: "Beiming2Query",
			Handler:    _OrderQuery_Beiming2Query_Handler,
		},
		{
			MethodName: "ExchangeQuery",
			Handler:    _OrderQuery_ExchangeQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order/orderQuery.proto",
}
